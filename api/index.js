Index.PACKAGES = {"cats.mtl.laws" : [{"name" : "cats.mtl.laws.AskLaws", "object" : "cats\/mtl\/laws\/AskLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Ask[F, E]): AskLaws[F, E]", "member" : "cats.mtl.laws.AskLaws.apply", "link" : "cats\/mtl\/laws\/AskLaws$.html#apply[F[_],E](implicitinstance0:cats.mtl.Ask[F,E]):cats.mtl.laws.AskLaws[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/AskLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/AskLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/AskLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/AskLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/AskLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/AskLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/AskLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/AskLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/AskLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/AskLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/AskLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/AskLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/AskLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/AskLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/AskLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/AskLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/AskLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/AskLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/AskLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/AskLaws.html", "kind" : "trait", "members_trait" : [{"label" : "readerIsAskAndMap", "tail" : "(f: (E) => A): IsEq[F[A]]", "member" : "cats.mtl.laws.AskLaws.readerIsAskAndMap", "link" : "cats\/mtl\/laws\/AskLaws.html#readerIsAskAndMap[A](f:E=>A):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "askAddsNoEffects", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.mtl.laws.AskLaws.askAddsNoEffects", "link" : "cats\/mtl\/laws\/AskLaws.html#askAddsNoEffects[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "applicative", "tail" : ": Applicative[F]", "member" : "cats.mtl.laws.AskLaws.applicative", "link" : "cats\/mtl\/laws\/AskLaws.html#applicative:cats.Applicative[F]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/AskLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/AskLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/AskLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/AskLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/AskLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/AskLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/AskLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/AskLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/AskLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/AskLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/AskLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/AskLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/AskLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/AskLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/AskLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/AskLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/AskLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/AskLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/AskLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "askInstance", "tail" : ": Ask[F, E]", "member" : "cats.mtl.laws.AskLaws.askInstance", "link" : "cats\/mtl\/laws\/AskLaws.html#askInstance:cats.mtl.Ask[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.CensorLaws", "object" : "cats\/mtl\/laws\/CensorLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Censor[F, L]): CensorLaws[F, L]", "member" : "cats.mtl.laws.CensorLaws.apply", "link" : "cats\/mtl\/laws\/CensorLaws$.html#apply[F[_],L](implicitinstance0:cats.mtl.Censor[F,L]):cats.mtl.laws.CensorLaws[F,L]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/CensorLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/CensorLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/CensorLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/CensorLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/CensorLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/CensorLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/CensorLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/CensorLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/CensorLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/CensorLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/CensorLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/CensorLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/CensorLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/CensorLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/CensorLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/CensorLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/CensorLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/CensorLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/CensorLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/CensorLaws.html", "kind" : "trait", "members_trait" : [{"label" : "tellAndClearIsPureUnit", "tail" : "(l: L): IsEq[F[Unit]]", "member" : "cats.mtl.laws.CensorLaws.tellAndClearIsPureUnit", "link" : "cats\/mtl\/laws\/CensorLaws.html#tellAndClearIsPureUnit(l:L):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "clearIsIdempotent", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.mtl.laws.CensorLaws.clearIsIdempotent", "link" : "cats\/mtl\/laws\/CensorLaws.html#clearIsIdempotent[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "censorWithPurIsTellEmpty", "tail" : "(a: A, f: (L) => L): IsEq[F[A]]", "member" : "cats.mtl.laws.CensorLaws.censorWithPurIsTellEmpty", "link" : "cats\/mtl\/laws\/CensorLaws.html#censorWithPurIsTellEmpty[A](a:A,f:L=>L):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "tellLeftProductHomomorphism", "tail" : "(l1: L, l2: L): IsEq[F[Unit]]", "member" : "cats.mtl.laws.CensorLaws.tellLeftProductHomomorphism", "link" : "cats\/mtl\/laws\/CensorLaws.html#tellLeftProductHomomorphism(l1:L,l2:L):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "tellRightProductHomomorphism", "tail" : "(l1: L, l2: L): IsEq[F[Unit]]", "member" : "cats.mtl.laws.CensorLaws.tellRightProductHomomorphism", "link" : "cats\/mtl\/laws\/CensorLaws.html#tellRightProductHomomorphism(l1:L,l2:L):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "A", "tail" : "(): Applicative[F]", "member" : "cats.mtl.laws.CensorLaws.A", "link" : "cats\/mtl\/laws\/CensorLaws.html#A:cats.Applicative[F]", "kind" : "implicit def"}, {"label" : "L", "tail" : "(): Monoid[L]", "member" : "cats.mtl.laws.CensorLaws.L", "link" : "cats\/mtl\/laws\/CensorLaws.html#L:cats.Monoid[L]", "kind" : "implicit def"}, {"label" : "listensIsListenThenMap", "tail" : "(fa: F[A], f: (L) => B): IsEq[F[(A, B)]]", "member" : "cats.mtl.laws.ListenLaws.listensIsListenThenMap", "link" : "cats\/mtl\/laws\/CensorLaws.html#listensIsListenThenMap[A,B](fa:F[A],f:L=>B):cats.laws.IsEq[F[(A,B)]]", "kind" : "def"}, {"label" : "listenAddsNoEffects", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.mtl.laws.ListenLaws.listenAddsNoEffects", "link" : "cats\/mtl\/laws\/CensorLaws.html#listenAddsNoEffects[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "listenRespectsTell", "tail" : "(l: L): IsEq[F[(Unit, L)]]", "member" : "cats.mtl.laws.ListenLaws.listenRespectsTell", "link" : "cats\/mtl\/laws\/CensorLaws.html#listenRespectsTell(l:L):cats.laws.IsEq[F[(Unit,L)]]", "kind" : "def"}, {"label" : "tupleIsWriterFlipped", "tail" : "(a: A, l: L): IsEq[F[A]]", "member" : "cats.mtl.laws.TellLaws.tupleIsWriterFlipped", "link" : "cats\/mtl\/laws\/CensorLaws.html#tupleIsWriterFlipped[A](a:A,l:L):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "writerIsTellAndMap", "tail" : "(a: A, l: L): IsEq[F[A]]", "member" : "cats.mtl.laws.TellLaws.writerIsTellAndMap", "link" : "cats\/mtl\/laws\/CensorLaws.html#writerIsTellAndMap[A](a:A,l:L):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "functor", "tail" : "(F: Tell[F, L]): Functor[F]", "member" : "cats.mtl.laws.TellLaws.functor", "link" : "cats\/mtl\/laws\/CensorLaws.html#functor(implicitF:cats.mtl.Tell[F,L]):cats.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/CensorLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/CensorLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/CensorLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/CensorLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/CensorLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/CensorLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/CensorLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/CensorLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/CensorLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/CensorLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/CensorLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/CensorLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/CensorLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/CensorLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/CensorLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/CensorLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/CensorLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/CensorLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/CensorLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): Censor[F, L]", "member" : "cats.mtl.laws.CensorLaws.F", "link" : "cats\/mtl\/laws\/CensorLaws.html#F:cats.mtl.Censor[F,L]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.ChronicleLaws", "object" : "cats\/mtl\/laws\/ChronicleLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance: Chronicle[F, E]): ChronicleLaws[F, E]", "member" : "cats.mtl.laws.ChronicleLaws.apply", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#apply[F[_],E](implicitinstance:cats.mtl.Chronicle[F,E]):cats.mtl.laws.ChronicleLaws[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/ChronicleLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/ChronicleLaws.html", "kind" : "trait", "members_trait" : [{"label" : "dictateSharkConfessIsConfessSemigroup", "tail" : "(e0: E, e: E)(ev: Semigroup[E]): IsEq[F[A]]", "member" : "cats.mtl.laws.ChronicleLaws.dictateSharkConfessIsConfessSemigroup", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#dictateSharkConfessIsConfessSemigroup[A](e0:E,e:E)(implicitev:cats.Semigroup[E]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "dictateSharkDictateIsDictateSemigroup", "tail" : "(e0: E, e: E)(ev: Semigroup[E]): IsEq[F[Unit]]", "member" : "cats.mtl.laws.ChronicleLaws.dictateSharkDictateIsDictateSemigroup", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#dictateSharkDictateIsDictateSemigroup(e0:E,e:E)(implicitev:cats.Semigroup[E]):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "pureThenRetconIsPure", "tail" : "(f: (E) => E, a: A): IsEq[F[A]]", "member" : "cats.mtl.laws.ChronicleLaws.pureThenRetconIsPure", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#pureThenRetconIsPure[A](f:E=>E,a:A):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "dictateThenRetconIsDictate", "tail" : "(f: (E) => E, e: E): IsEq[F[Unit]]", "member" : "cats.mtl.laws.ChronicleLaws.dictateThenRetconIsDictate", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#dictateThenRetconIsDictate[A](f:E=>E,e:E):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "confessThenRetconIsConfess", "tail" : "(f: (E) => E, e: E): IsEq[F[A]]", "member" : "cats.mtl.laws.ChronicleLaws.confessThenRetconIsConfess", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#confessThenRetconIsConfess[A](f:E=>E,e:E):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "dictateThenMementoIsDictateRightUnit", "tail" : "(e: E): IsEq[F[Either[E, Unit]]]", "member" : "cats.mtl.laws.ChronicleLaws.dictateThenMementoIsDictateRightUnit", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#dictateThenMementoIsDictateRightUnit(e:E):cats.laws.IsEq[F[Either[E,Unit]]]", "kind" : "def"}, {"label" : "confessThenMementoIsLeft", "tail" : "(e: E): IsEq[F[Either[E, A]]]", "member" : "cats.mtl.laws.ChronicleLaws.confessThenMementoIsLeft", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#confessThenMementoIsLeft[A](e:E):cats.laws.IsEq[F[Either[E,A]]]", "kind" : "def"}, {"label" : "dictateThenCondemIsConfess", "tail" : "(e: E): IsEq[F[Unit]]", "member" : "cats.mtl.laws.ChronicleLaws.dictateThenCondemIsConfess", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#dictateThenCondemIsConfess[A](e:E):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "confessThenAbsolveIsPure", "tail" : "(a: A, e: E): IsEq[F[A]]", "member" : "cats.mtl.laws.ChronicleLaws.confessThenAbsolveIsPure", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#confessThenAbsolveIsPure[A](a:A,e:E):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "pureThenMaterializeIsRight", "tail" : "(a: A): IsEq[F[Ior[E, A]]]", "member" : "cats.mtl.laws.ChronicleLaws.pureThenMaterializeIsRight", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#pureThenMaterializeIsRight[A](a:A):cats.laws.IsEq[F[cats.data.Ior[E,A]]]", "kind" : "def"}, {"label" : "confessThenMaterializeIsLeft", "tail" : "(e: E): IsEq[F[Ior[E, A]]]", "member" : "cats.mtl.laws.ChronicleLaws.confessThenMaterializeIsLeft", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#confessThenMaterializeIsLeft[A](e:E):cats.laws.IsEq[F[cats.data.Ior[E,A]]]", "kind" : "def"}, {"label" : "dictateThenMaterializeIsBoth", "tail" : "(e: E): IsEq[F[Ior[E, Unit]]]", "member" : "cats.mtl.laws.ChronicleLaws.dictateThenMaterializeIsBoth", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#dictateThenMaterializeIsBoth(e:E):cats.laws.IsEq[F[cats.data.Ior[E,Unit]]]", "kind" : "def"}, {"label" : "monad", "tail" : ": Monad[F]", "member" : "cats.mtl.laws.ChronicleLaws.monad", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#monad:cats.Monad[F]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/ChronicleLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "chronicleInstance", "tail" : ": Chronicle[F, E]", "member" : "cats.mtl.laws.ChronicleLaws.chronicleInstance", "link" : "cats\/mtl\/laws\/ChronicleLaws.html#chronicleInstance:cats.mtl.Chronicle[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : "Created by Yuval.Itzchakov on 20\/07\/2018."}, {"name" : "cats.mtl.laws.HandleLaws", "object" : "cats\/mtl\/laws\/HandleLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Handle[F, E]): HandleLaws[F, E]", "member" : "cats.mtl.laws.HandleLaws.apply", "link" : "cats\/mtl\/laws\/HandleLaws$.html#apply[F[_],E](implicitinstance0:cats.mtl.Handle[F,E]):cats.mtl.laws.HandleLaws[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/HandleLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/HandleLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/HandleLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/HandleLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/HandleLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/HandleLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/HandleLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/HandleLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/HandleLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/HandleLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/HandleLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/HandleLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/HandleLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/HandleLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/HandleLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/HandleLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/HandleLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/HandleLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/HandleLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/HandleLaws.html", "kind" : "trait", "members_trait" : [{"label" : "catchNonFatalDefault", "tail" : "(a: A, f: (Throwable) => E): IsEq[F[A]]", "member" : "cats.mtl.laws.HandleLaws.catchNonFatalDefault", "link" : "cats\/mtl\/laws\/HandleLaws.html#catchNonFatalDefault[A](a:A,f:Throwable=>E):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "pureAttemptIsPureRight", "tail" : "(a: A): IsEq[F[Either[E, A]]]", "member" : "cats.mtl.laws.HandleLaws.pureAttemptIsPureRight", "link" : "cats\/mtl\/laws\/HandleLaws.html#pureAttemptIsPureRight[A](a:A):cats.laws.IsEq[F[Either[E,A]]]", "kind" : "def"}, {"label" : "raiseAttemptIsPureLeft", "tail" : "(e: E): IsEq[F[Either[E, Unit]]]", "member" : "cats.mtl.laws.HandleLaws.raiseAttemptIsPureLeft", "link" : "cats\/mtl\/laws\/HandleLaws.html#raiseAttemptIsPureLeft(e:E):cats.laws.IsEq[F[Either[E,Unit]]]", "kind" : "def"}, {"label" : "handlePureIsPure", "tail" : "(a: A, f: (E) => A): IsEq[F[A]]", "member" : "cats.mtl.laws.HandleLaws.handlePureIsPure", "link" : "cats\/mtl\/laws\/HandleLaws.html#handlePureIsPure[A](a:A,f:E=>A):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "handleWithPureIsPure", "tail" : "(a: A, f: (E) => F[A]): IsEq[F[A]]", "member" : "cats.mtl.laws.HandleLaws.handleWithPureIsPure", "link" : "cats\/mtl\/laws\/HandleLaws.html#handleWithPureIsPure[A](a:A,f:E=>F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "raiseAndHandleIsPure", "tail" : "(e: E, f: (E) => A): IsEq[F[A]]", "member" : "cats.mtl.laws.HandleLaws.raiseAndHandleIsPure", "link" : "cats\/mtl\/laws\/HandleLaws.html#raiseAndHandleIsPure[A](e:E,f:E=>A):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "raiseAndHandleWithIsFunctionApplication", "tail" : "(e: E, f: (E) => F[A]): IsEq[F[A]]", "member" : "cats.mtl.laws.HandleLaws.raiseAndHandleWithIsFunctionApplication", "link" : "cats\/mtl\/laws\/HandleLaws.html#raiseAndHandleWithIsFunctionApplication[A](e:E,f:E=>F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "applicativeInstance", "tail" : ": Applicative[F]", "member" : "cats.mtl.laws.HandleLaws.applicativeInstance", "link" : "cats\/mtl\/laws\/HandleLaws.html#applicativeInstance:cats.Applicative[F]", "kind" : "implicit val"}, {"label" : "failThenFlatMapFails", "tail" : "(ex: E, f: (A) => A): IsEq[F[A]]", "member" : "cats.mtl.laws.RaiseLaws.failThenFlatMapFails", "link" : "cats\/mtl\/laws\/HandleLaws.html#failThenFlatMapFails[A](ex:E,f:A=>A):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "functor", "tail" : ": Functor[F]", "member" : "cats.mtl.laws.RaiseLaws.functor", "link" : "cats\/mtl\/laws\/HandleLaws.html#functor:cats.Functor[F]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/HandleLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/HandleLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/HandleLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/HandleLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/HandleLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/HandleLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/HandleLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/HandleLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/HandleLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/HandleLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/HandleLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/HandleLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/HandleLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/HandleLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/HandleLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/HandleLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/HandleLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/HandleLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/HandleLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handleInstance", "tail" : ": Handle[F, E]", "member" : "cats.mtl.laws.HandleLaws.handleInstance", "link" : "cats\/mtl\/laws\/HandleLaws.html#handleInstance:cats.mtl.Handle[F,E]", "kind" : "implicit abstract val"}, {"label" : "raiseInstance", "tail" : ": Raise[F, E]", "member" : "cats.mtl.laws.RaiseLaws.raiseInstance", "link" : "cats\/mtl\/laws\/HandleLaws.html#raiseInstance:cats.mtl.Raise[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.ListenLaws", "object" : "cats\/mtl\/laws\/ListenLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Listen[F, E]): ListenLaws[F, E]", "member" : "cats.mtl.laws.ListenLaws.apply", "link" : "cats\/mtl\/laws\/ListenLaws$.html#apply[F[_],E](implicitinstance0:cats.mtl.Listen[F,E]):cats.mtl.laws.ListenLaws[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/ListenLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/ListenLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/ListenLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/ListenLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/ListenLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/ListenLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/ListenLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ListenLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ListenLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ListenLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/ListenLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/ListenLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/ListenLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/ListenLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/ListenLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/ListenLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/ListenLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/ListenLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/ListenLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/ListenLaws.html", "kind" : "trait", "members_trait" : [{"label" : "listensIsListenThenMap", "tail" : "(fa: F[A], f: (L) => B): IsEq[F[(A, B)]]", "member" : "cats.mtl.laws.ListenLaws.listensIsListenThenMap", "link" : "cats\/mtl\/laws\/ListenLaws.html#listensIsListenThenMap[A,B](fa:F[A],f:L=>B):cats.laws.IsEq[F[(A,B)]]", "kind" : "def"}, {"label" : "listenAddsNoEffects", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.mtl.laws.ListenLaws.listenAddsNoEffects", "link" : "cats\/mtl\/laws\/ListenLaws.html#listenAddsNoEffects[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "listenRespectsTell", "tail" : "(l: L): IsEq[F[(Unit, L)]]", "member" : "cats.mtl.laws.ListenLaws.listenRespectsTell", "link" : "cats\/mtl\/laws\/ListenLaws.html#listenRespectsTell(l:L):cats.laws.IsEq[F[(Unit,L)]]", "kind" : "def"}, {"label" : "tupleIsWriterFlipped", "tail" : "(a: A, l: L): IsEq[F[A]]", "member" : "cats.mtl.laws.TellLaws.tupleIsWriterFlipped", "link" : "cats\/mtl\/laws\/ListenLaws.html#tupleIsWriterFlipped[A](a:A,l:L):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "writerIsTellAndMap", "tail" : "(a: A, l: L): IsEq[F[A]]", "member" : "cats.mtl.laws.TellLaws.writerIsTellAndMap", "link" : "cats\/mtl\/laws\/ListenLaws.html#writerIsTellAndMap[A](a:A,l:L):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "functor", "tail" : "(F: Tell[F, L]): Functor[F]", "member" : "cats.mtl.laws.TellLaws.functor", "link" : "cats\/mtl\/laws\/ListenLaws.html#functor(implicitF:cats.mtl.Tell[F,L]):cats.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/ListenLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/ListenLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/ListenLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/ListenLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/ListenLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/ListenLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/ListenLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ListenLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ListenLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/ListenLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/ListenLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/ListenLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/ListenLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/ListenLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/ListenLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/ListenLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/ListenLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/ListenLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/ListenLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): Listen[F, L]", "member" : "cats.mtl.laws.ListenLaws.F", "link" : "cats\/mtl\/laws\/ListenLaws.html#F:cats.mtl.Listen[F,L]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.LocalLaws", "object" : "cats\/mtl\/laws\/LocalLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Local[F, E]): LocalLaws[F, E]", "member" : "cats.mtl.laws.LocalLaws.apply", "link" : "cats\/mtl\/laws\/LocalLaws$.html#apply[F[_],E](implicitinstance0:cats.mtl.Local[F,E]):cats.mtl.laws.LocalLaws[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/LocalLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/LocalLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/LocalLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/LocalLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/LocalLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/LocalLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/LocalLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/LocalLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/LocalLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/LocalLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/LocalLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/LocalLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/LocalLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/LocalLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/LocalLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/LocalLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/LocalLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/LocalLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/LocalLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/LocalLaws.html", "kind" : "trait", "members_trait" : [{"label" : "scopeIsLocalConst", "tail" : "(fa: F[A], e: E): IsEq[F[A]]", "member" : "cats.mtl.laws.LocalLaws.scopeIsLocalConst", "link" : "cats\/mtl\/laws\/LocalLaws.html#scopeIsLocalConst[A](fa:F[A],e:E):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "localDistributesOverAp", "tail" : "(fa: F[A], ff: F[(A) => B], f: (E) => E): IsEq[F[B]]", "member" : "cats.mtl.laws.LocalLaws.localDistributesOverAp", "link" : "cats\/mtl\/laws\/LocalLaws.html#localDistributesOverAp[A,B](fa:F[A],ff:F[A=>B],f:E=>E):cats.laws.IsEq[F[B]]", "kind" : "def"}, {"label" : "localPureIsPure", "tail" : "(a: A, f: (E) => E): IsEq[F[A]]", "member" : "cats.mtl.laws.LocalLaws.localPureIsPure", "link" : "cats\/mtl\/laws\/LocalLaws.html#localPureIsPure[A](a:A,f:E=>E):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "askReflectsLocal", "tail" : "(f: (E) => E): IsEq[F[E]]", "member" : "cats.mtl.laws.LocalLaws.askReflectsLocal", "link" : "cats\/mtl\/laws\/LocalLaws.html#askReflectsLocal(f:E=>E):cats.laws.IsEq[F[E]]", "kind" : "def"}, {"label" : "applicative", "tail" : ": Applicative[F]", "member" : "cats.mtl.laws.LocalLaws.applicative", "link" : "cats\/mtl\/laws\/LocalLaws.html#applicative:cats.Applicative[F]", "kind" : "implicit val"}, {"label" : "readerIsAskAndMap", "tail" : "(f: (E) => A): IsEq[F[A]]", "member" : "cats.mtl.laws.AskLaws.readerIsAskAndMap", "link" : "cats\/mtl\/laws\/LocalLaws.html#readerIsAskAndMap[A](f:E=>A):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "askAddsNoEffects", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.mtl.laws.AskLaws.askAddsNoEffects", "link" : "cats\/mtl\/laws\/LocalLaws.html#askAddsNoEffects[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/LocalLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/LocalLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/LocalLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/LocalLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/LocalLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/LocalLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/LocalLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/LocalLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/LocalLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/LocalLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/LocalLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/LocalLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/LocalLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/LocalLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/LocalLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/LocalLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/LocalLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/LocalLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/LocalLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "localInstance", "tail" : ": Local[F, E]", "member" : "cats.mtl.laws.LocalLaws.localInstance", "link" : "cats\/mtl\/laws\/LocalLaws.html#localInstance:cats.mtl.Local[F,E]", "kind" : "implicit abstract val"}, {"label" : "askInstance", "tail" : ": Ask[F, E]", "member" : "cats.mtl.laws.AskLaws.askInstance", "link" : "cats\/mtl\/laws\/LocalLaws.html#askInstance:cats.mtl.Ask[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.RaiseLaws", "object" : "cats\/mtl\/laws\/RaiseLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Raise[F, E]): RaiseLaws[F, E]", "member" : "cats.mtl.laws.RaiseLaws.apply", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#apply[F[_],E](implicitinstance0:cats.mtl.Raise[F,E]):cats.mtl.laws.RaiseLaws[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/RaiseLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/RaiseLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/RaiseLaws.html", "kind" : "trait", "members_trait" : [{"label" : "failThenFlatMapFails", "tail" : "(ex: E, f: (A) => A): IsEq[F[A]]", "member" : "cats.mtl.laws.RaiseLaws.failThenFlatMapFails", "link" : "cats\/mtl\/laws\/RaiseLaws.html#failThenFlatMapFails[A](ex:E,f:A=>A):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "functor", "tail" : ": Functor[F]", "member" : "cats.mtl.laws.RaiseLaws.functor", "link" : "cats\/mtl\/laws\/RaiseLaws.html#functor:cats.Functor[F]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/RaiseLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/RaiseLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/RaiseLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/RaiseLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/RaiseLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/RaiseLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/RaiseLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/RaiseLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/RaiseLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/RaiseLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/RaiseLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/RaiseLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/RaiseLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/RaiseLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/RaiseLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/RaiseLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/RaiseLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/RaiseLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/RaiseLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "raiseInstance", "tail" : ": Raise[F, E]", "member" : "cats.mtl.laws.RaiseLaws.raiseInstance", "link" : "cats\/mtl\/laws\/RaiseLaws.html#raiseInstance:cats.mtl.Raise[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.StatefulLaws", "object" : "cats\/mtl\/laws\/StatefulLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Stateful[F, S]): StatefulLaws[F, S]", "member" : "cats.mtl.laws.StatefulLaws.apply", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#apply[F[_],S](implicitinstance0:cats.mtl.Stateful[F,S]):cats.mtl.laws.StatefulLaws[F,S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/StatefulLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/StatefulLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/StatefulLaws.html", "kind" : "trait", "members_trait" : [{"label" : "modifyIsGetThenSet", "tail" : "(f: (S) => S): IsEq[F[Unit]]", "member" : "cats.mtl.laws.StatefulLaws.modifyIsGetThenSet", "link" : "cats\/mtl\/laws\/StatefulLaws.html#modifyIsGetThenSet(f:S=>S):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "getThenGetGetsOnce", "tail" : "(): IsEq[F[S]]", "member" : "cats.mtl.laws.StatefulLaws.getThenGetGetsOnce", "link" : "cats\/mtl\/laws\/StatefulLaws.html#getThenGetGetsOnce:cats.laws.IsEq[F[S]]", "kind" : "def"}, {"label" : "setThenSetSetsLast", "tail" : "(s1: S, s2: S): IsEq[F[Unit]]", "member" : "cats.mtl.laws.StatefulLaws.setThenSetSetsLast", "link" : "cats\/mtl\/laws\/StatefulLaws.html#setThenSetSetsLast(s1:S,s2:S):cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "setThenGetReturnsSetted", "tail" : "(s: S): IsEq[F[S]]", "member" : "cats.mtl.laws.StatefulLaws.setThenGetReturnsSetted", "link" : "cats\/mtl\/laws\/StatefulLaws.html#setThenGetReturnsSetted(s:S):cats.laws.IsEq[F[S]]", "kind" : "def"}, {"label" : "getThenSetDoesNothing", "tail" : "(): IsEq[F[Unit]]", "member" : "cats.mtl.laws.StatefulLaws.getThenSetDoesNothing", "link" : "cats\/mtl\/laws\/StatefulLaws.html#getThenSetDoesNothing:cats.laws.IsEq[F[Unit]]", "kind" : "def"}, {"label" : "monad", "tail" : ": Monad[F]", "member" : "cats.mtl.laws.StatefulLaws.monad", "link" : "cats\/mtl\/laws\/StatefulLaws.html#monad:cats.Monad[F]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/StatefulLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/StatefulLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/StatefulLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/StatefulLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/StatefulLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/StatefulLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/StatefulLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/StatefulLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/StatefulLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/StatefulLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/StatefulLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/StatefulLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/StatefulLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/StatefulLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/StatefulLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/StatefulLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/StatefulLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/StatefulLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/StatefulLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stateInstance", "tail" : ": Stateful[F, S]", "member" : "cats.mtl.laws.StatefulLaws.stateInstance", "link" : "cats\/mtl\/laws\/StatefulLaws.html#stateInstance:cats.mtl.Stateful[F,S]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.TellLaws", "object" : "cats\/mtl\/laws\/TellLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Tell[F, L]): TellLaws[F, L]", "member" : "cats.mtl.laws.TellLaws.apply", "link" : "cats\/mtl\/laws\/TellLaws$.html#apply[F[_],L](implicitinstance0:cats.mtl.Tell[F,L]):cats.mtl.laws.TellLaws[F,L]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/TellLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/TellLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/TellLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/TellLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/TellLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/TellLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/TellLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/TellLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/TellLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/TellLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/TellLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/TellLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/TellLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/TellLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/TellLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/TellLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/TellLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/TellLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/TellLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/TellLaws.html", "kind" : "trait", "members_trait" : [{"label" : "tupleIsWriterFlipped", "tail" : "(a: A, l: L): IsEq[F[A]]", "member" : "cats.mtl.laws.TellLaws.tupleIsWriterFlipped", "link" : "cats\/mtl\/laws\/TellLaws.html#tupleIsWriterFlipped[A](a:A,l:L):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "writerIsTellAndMap", "tail" : "(a: A, l: L): IsEq[F[A]]", "member" : "cats.mtl.laws.TellLaws.writerIsTellAndMap", "link" : "cats\/mtl\/laws\/TellLaws.html#writerIsTellAndMap[A](a:A,l:L):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "functor", "tail" : "(F: Tell[F, L]): Functor[F]", "member" : "cats.mtl.laws.TellLaws.functor", "link" : "cats\/mtl\/laws\/TellLaws.html#functor(implicitF:cats.mtl.Tell[F,L]):cats.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/TellLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/TellLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/TellLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/TellLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/TellLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/TellLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/TellLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/TellLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/TellLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/TellLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/TellLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/TellLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/TellLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/TellLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/TellLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/TellLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/TellLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/TellLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/TellLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): Tell[F, L]", "member" : "cats.mtl.laws.TellLaws.F", "link" : "cats\/mtl\/laws\/TellLaws.html#F:cats.mtl.Tell[F,L]", "kind" : "implicit abstract def"}], "shortDescription" : ""}], "cats.mtl.laws.discipline" : [{"name" : "cats.mtl.laws.discipline.AskTests", "object" : "cats\/mtl\/laws\/discipline\/AskTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance: Ask[F, E]): AskTests[F, E]", "member" : "cats.mtl.laws.discipline.AskTests.apply", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#apply[F[_],E](implicitinstance:cats.mtl.Ask[F,E]):cats.mtl.laws.discipline.AskTests[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/AskTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/AskTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "ask", "tail" : "(arg0: Arbitrary[A], ArbFA: Arbitrary[F[A]], CogenE: Cogen[E], EqFA: Eq[F[A]]): RuleSet", "member" : "cats.mtl.laws.discipline.AskTests.ask", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#ask[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFA:cats.Eq[F[A]]):AskTests.this.RuleSet", "kind" : "def"}, {"label" : "laws", "tail" : "(): AskLaws[F, E]", "member" : "cats.mtl.laws.discipline.AskTests.laws", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#laws:cats.mtl.laws.AskLaws[F,E]", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "askInstance", "tail" : ": Ask[F, E]", "member" : "cats.mtl.laws.discipline.AskTests.askInstance", "link" : "cats\/mtl\/laws\/discipline\/AskTests.html#askInstance:cats.mtl.Ask[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.CensorTests", "object" : "cats\/mtl\/laws\/discipline\/CensorTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Censor[F, L]): CensorTests[F, L]", "member" : "cats.mtl.laws.discipline.CensorTests.apply", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#apply[F[_],L](implicitinstance0:cats.mtl.Censor[F,L]):cats.mtl.laws.discipline.CensorTests[F,L]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/CensorTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/CensorTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "censor", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], ArbFA: Arbitrary[F[A]], ArbL: Arbitrary[L], CogenL: Cogen[L], EqFU: Eq[F[Unit]], EqFA: Eq[F[A]], EqFAB: Eq[F[(A, B)]], EqFUL: Eq[F[(Unit, L)]]): RuleSet", "member" : "cats.mtl.laws.discipline.CensorTests.censor", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#censor[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbL:org.scalacheck.Arbitrary[L],implicitCogenL:org.scalacheck.Cogen[L],implicitEqFU:cats.Eq[F[Unit]],implicitEqFA:cats.Eq[F[A]],implicitEqFAB:cats.Eq[F[(A,B)]],implicitEqFUL:cats.Eq[F[(Unit,L)]]):CensorTests.this.RuleSet", "kind" : "def"}, {"label" : "listen", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], ArbFA: Arbitrary[F[A]], ArbL: Arbitrary[L], CogenL: Cogen[L], EqFA: Eq[F[A]], EqFAB: Eq[F[(A, B)]], EqFUL: Eq[F[(Unit, L)]]): RuleSet", "member" : "cats.mtl.laws.discipline.ListenTests.listen", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#listen[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbL:org.scalacheck.Arbitrary[L],implicitCogenL:org.scalacheck.Cogen[L],implicitEqFA:cats.Eq[F[A]],implicitEqFAB:cats.Eq[F[(A,B)]],implicitEqFUL:cats.Eq[F[(Unit,L)]]):ListenTests.this.RuleSet", "kind" : "def"}, {"label" : "tell", "tail" : "(arg0: Arbitrary[A], ArbL: Arbitrary[L], EqFA: Eq[F[A]]): RuleSet", "member" : "cats.mtl.laws.discipline.TellTests.tell", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#tell[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbL:org.scalacheck.Arbitrary[L],implicitEqFA:cats.Eq[F[A]]):TellTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): CensorLaws[F, L]", "member" : "cats.mtl.laws.discipline.CensorTests.laws", "link" : "cats\/mtl\/laws\/discipline\/CensorTests.html#laws:cats.mtl.laws.CensorLaws[F,L]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.ChronicleTests", "object" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance: Chronicle[F, E]): ChronicleTests[F, E]", "member" : "cats.mtl.laws.discipline.ChronicleTests.apply", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#apply[F[_],E](implicitinstance:cats.mtl.Chronicle[F,E]):cats.mtl.laws.discipline.ChronicleTests[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "chronicle", "tail" : "(arg0: Arbitrary[A], ArbE: Arbitrary[E], CogenE: Cogen[E], EqFA: Eq[F[A]], EqFUnit: Eq[F[Unit]], EqFEIorUnit: Eq[F[Ior[E, Unit]]], EqFEUnit: Eq[F[Either[E, Unit]]], EqFIor: Eq[F[Ior[E, A]]], EqFEither: Eq[F[Either[E, A]]], SemigroupE: Semigroup[E]): RuleSet", "member" : "cats.mtl.laws.discipline.ChronicleTests.chronicle", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#chronicle[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbE:org.scalacheck.Arbitrary[E],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFA:cats.Eq[F[A]],implicitEqFUnit:cats.Eq[F[Unit]],implicitEqFEIorUnit:cats.Eq[F[cats.data.Ior[E,Unit]]],implicitEqFEUnit:cats.Eq[F[Either[E,Unit]]],implicitEqFIor:cats.Eq[F[cats.data.Ior[E,A]]],implicitEqFEither:cats.Eq[F[Either[E,A]]],implicitSemigroupE:cats.Semigroup[E]):ChronicleTests.this.RuleSet", "kind" : "def"}, {"label" : "laws", "tail" : "(): ChronicleLaws[F, E]", "member" : "cats.mtl.laws.discipline.ChronicleTests.laws", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#laws:cats.mtl.laws.ChronicleLaws[F,E]", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "chronicleInstance", "tail" : ": Chronicle[F, E]", "member" : "cats.mtl.laws.discipline.ChronicleTests.chronicleInstance", "link" : "cats\/mtl\/laws\/discipline\/ChronicleTests.html#chronicleInstance:cats.mtl.Chronicle[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.HandleTests", "object" : "cats\/mtl\/laws\/discipline\/HandleTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Handle[F, E]): HandleTests[F, E]", "member" : "cats.mtl.laws.discipline.HandleTests.apply", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#apply[F[_],E](implicitinstance0:cats.mtl.Handle[F,E]):cats.mtl.laws.discipline.HandleTests[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/HandleTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/HandleTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "handle", "tail" : "(arg0: Arbitrary[A], ArbFA: Arbitrary[F[A]], ArbE: Arbitrary[E], CogenA: Cogen[A], CogenE: Cogen[E], EqFA: Eq[F[A]], EqEitherA: Eq[F[Either[E, A]]], EqEitherUnit: Eq[F[Either[E, Unit]]]): RuleSet", "member" : "cats.mtl.laws.discipline.HandleTests.handle", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#handle[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbE:org.scalacheck.Arbitrary[E],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFA:cats.Eq[F[A]],implicitEqEitherA:cats.Eq[F[Either[E,A]]],implicitEqEitherUnit:cats.Eq[F[Either[E,Unit]]]):HandleTests.this.RuleSet", "kind" : "def"}, {"label" : "laws", "tail" : "(): HandleLaws[F, E]", "member" : "cats.mtl.laws.discipline.HandleTests.laws", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#laws:cats.mtl.laws.HandleLaws[F,E]", "kind" : "def"}, {"label" : "raise", "tail" : "(arg0: Arbitrary[A], ArbE: Arbitrary[E], CogenA: Cogen[A], EqFA: Eq[F[A]]): RuleSet", "member" : "cats.mtl.laws.discipline.RaiseTests.raise", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#raise[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbE:org.scalacheck.Arbitrary[E],implicitCogenA:org.scalacheck.Cogen[A],implicitEqFA:cats.Eq[F[A]]):RaiseTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handleInstance", "tail" : ": Handle[F, E]", "member" : "cats.mtl.laws.discipline.HandleTests.handleInstance", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#handleInstance:cats.mtl.Handle[F,E]", "kind" : "implicit abstract val"}, {"label" : "raiseInstance", "tail" : ": Raise[F, E]", "member" : "cats.mtl.laws.discipline.RaiseTests.raiseInstance", "link" : "cats\/mtl\/laws\/discipline\/HandleTests.html#raiseInstance:cats.mtl.Raise[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.ListenTests", "object" : "cats\/mtl\/laws\/discipline\/ListenTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Listen[F, L]): ListenTests[F, L]", "member" : "cats.mtl.laws.discipline.ListenTests.apply", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#apply[F[_],L](implicitinstance0:cats.mtl.Listen[F,L]):cats.mtl.laws.discipline.ListenTests[F,L]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ListenTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/ListenTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "listen", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], ArbFA: Arbitrary[F[A]], ArbL: Arbitrary[L], CogenL: Cogen[L], EqFA: Eq[F[A]], EqFAB: Eq[F[(A, B)]], EqFUL: Eq[F[(Unit, L)]]): RuleSet", "member" : "cats.mtl.laws.discipline.ListenTests.listen", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#listen[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbL:org.scalacheck.Arbitrary[L],implicitCogenL:org.scalacheck.Cogen[L],implicitEqFA:cats.Eq[F[A]],implicitEqFAB:cats.Eq[F[(A,B)]],implicitEqFUL:cats.Eq[F[(Unit,L)]]):ListenTests.this.RuleSet", "kind" : "def"}, {"label" : "tell", "tail" : "(arg0: Arbitrary[A], ArbL: Arbitrary[L], EqFA: Eq[F[A]]): RuleSet", "member" : "cats.mtl.laws.discipline.TellTests.tell", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#tell[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbL:org.scalacheck.Arbitrary[L],implicitEqFA:cats.Eq[F[A]]):TellTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): ListenLaws[F, L]", "member" : "cats.mtl.laws.discipline.ListenTests.laws", "link" : "cats\/mtl\/laws\/discipline\/ListenTests.html#laws:cats.mtl.laws.ListenLaws[F,L]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.LocalTests", "object" : "cats\/mtl\/laws\/discipline\/LocalTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Local[F, E]): LocalTests[F, E]", "member" : "cats.mtl.laws.discipline.LocalTests.apply", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#apply[F[_],E](implicitinstance0:cats.mtl.Local[F,E]):cats.mtl.laws.discipline.LocalTests[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/LocalTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/LocalTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "local", "tail" : "(arg0: Arbitrary[A], ArbFA: Arbitrary[F[A]], ArbFAB: Arbitrary[F[(A) => B]], ArbEE: Arbitrary[(E) => E], ArbE: Arbitrary[E], CogenE: Cogen[E], EqFU: Eq[F[E]], EqFA: Eq[F[A]], EqFB: Eq[F[B]]): RuleSet", "member" : "cats.mtl.laws.discipline.LocalTests.local", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#local[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbFAB:org.scalacheck.Arbitrary[F[A=>B]],implicitArbEE:org.scalacheck.Arbitrary[E=>E],implicitArbE:org.scalacheck.Arbitrary[E],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFU:cats.Eq[F[E]],implicitEqFA:cats.Eq[F[A]],implicitEqFB:cats.Eq[F[B]]):LocalTests.this.RuleSet", "kind" : "def"}, {"label" : "laws", "tail" : "(): LocalLaws[F, E]", "member" : "cats.mtl.laws.discipline.LocalTests.laws", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#laws:cats.mtl.laws.LocalLaws[F,E]", "kind" : "def"}, {"label" : "ask", "tail" : "(arg0: Arbitrary[A], ArbFA: Arbitrary[F[A]], CogenE: Cogen[E], EqFA: Eq[F[A]]): RuleSet", "member" : "cats.mtl.laws.discipline.AskTests.ask", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#ask[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFA:cats.Eq[F[A]]):AskTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "localInstance", "tail" : ": Local[F, E]", "member" : "cats.mtl.laws.discipline.LocalTests.localInstance", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#localInstance:cats.mtl.Local[F,E]", "kind" : "implicit abstract val"}, {"label" : "askInstance", "tail" : ": Ask[F, E]", "member" : "cats.mtl.laws.discipline.AskTests.askInstance", "link" : "cats\/mtl\/laws\/discipline\/LocalTests.html#askInstance:cats.mtl.Ask[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.RaiseTests", "object" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Raise[F, E]): RaiseTests[F, E]", "member" : "cats.mtl.laws.discipline.RaiseTests.apply", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#apply[F[_],E](implicitinstance0:cats.mtl.Raise[F,E]):cats.mtl.laws.discipline.RaiseTests[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/RaiseTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "raise", "tail" : "(arg0: Arbitrary[A], ArbE: Arbitrary[E], CogenA: Cogen[A], EqFA: Eq[F[A]]): RuleSet", "member" : "cats.mtl.laws.discipline.RaiseTests.raise", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#raise[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbE:org.scalacheck.Arbitrary[E],implicitCogenA:org.scalacheck.Cogen[A],implicitEqFA:cats.Eq[F[A]]):RaiseTests.this.RuleSet", "kind" : "def"}, {"label" : "laws", "tail" : "(): RaiseLaws[F, E]", "member" : "cats.mtl.laws.discipline.RaiseTests.laws", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#laws:cats.mtl.laws.RaiseLaws[F,E]", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "raiseInstance", "tail" : ": Raise[F, E]", "member" : "cats.mtl.laws.discipline.RaiseTests.raiseInstance", "link" : "cats\/mtl\/laws\/discipline\/RaiseTests.html#raiseInstance:cats.mtl.Raise[F,E]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.StatefulTests", "object" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Stateful[F, S]): StatefulTests[F, S]", "member" : "cats.mtl.laws.discipline.StatefulTests.apply", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#apply[F[_],S](implicitinstance0:cats.mtl.Stateful[F,S]):cats.mtl.laws.discipline.StatefulTests[F,S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/StatefulTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "stateful", "tail" : "(arg0: Arbitrary[A], ArbS: Arbitrary[S], CogenS: Cogen[S], EqFU: Eq[F[Unit]], EqFS: Eq[F[S]]): RuleSet", "member" : "cats.mtl.laws.discipline.StatefulTests.stateful", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#stateful[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbS:org.scalacheck.Arbitrary[S],implicitCogenS:org.scalacheck.Cogen[S],implicitEqFU:cats.Eq[F[Unit]],implicitEqFS:cats.Eq[F[S]]):StatefulTests.this.RuleSet", "kind" : "def"}, {"label" : "laws", "tail" : "(): StatefulLaws[F, S]", "member" : "cats.mtl.laws.discipline.StatefulTests.laws", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#laws:cats.mtl.laws.StatefulLaws[F,S]", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stateInstance", "tail" : ": Stateful[F, S]", "member" : "cats.mtl.laws.discipline.StatefulTests.stateInstance", "link" : "cats\/mtl\/laws\/discipline\/StatefulTests.html#stateInstance:cats.mtl.Stateful[F,S]", "kind" : "implicit abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.laws.discipline.TellTests", "object" : "cats\/mtl\/laws\/discipline\/TellTests$.html", "members_object" : [{"label" : "apply", "tail" : "(instance0: Tell[F, L]): TellTests[F, L]", "member" : "cats.mtl.laws.discipline.TellTests.apply", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#apply[F[_],L](implicitinstance0:cats.mtl.Tell[F,L]):cats.mtl.laws.discipline.TellTests[F,L]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/TellTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/laws\/discipline\/TellTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "tell", "tail" : "(arg0: Arbitrary[A], ArbL: Arbitrary[L], EqFA: Eq[F[A]]): RuleSet", "member" : "cats.mtl.laws.discipline.TellTests.tell", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#tell[A](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitArbL:org.scalacheck.Arbitrary[L],implicitEqFA:cats.Eq[F[A]]):TellTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): TellLaws[F, L]", "member" : "cats.mtl.laws.discipline.TellTests.laws", "link" : "cats\/mtl\/laws\/discipline\/TellTests.html#laws:cats.mtl.laws.TellLaws[F,L]", "kind" : "abstract def"}], "shortDescription" : ""}], "cats.mtl" : [{"name" : "cats.mtl.Ask", "object" : "cats\/mtl\/Ask$.html", "members_object" : [{"label" : "reader", "tail" : "(fun: (E) => A)(ask: Ask[F, E]): F[A]", "member" : "cats.mtl.Ask.reader", "link" : "cats\/mtl\/Ask$.html#reader[F[_],E,A](fun:E=>A)(implicitask:cats.mtl.Ask[F,E]):F[A]", "kind" : "def"}, {"label" : "readerFE", "tail" : "(): readerFEPartiallyApplied[F, E]", "member" : "cats.mtl.Ask.readerFE", "link" : "cats\/mtl\/Ask$.html#readerFE[F[_],E]:cats.mtl.Ask.readerFEPartiallyApplied[F,E]", "kind" : "def"}, {"label" : "askF", "tail" : "(): askFPartiallyApplied[F]", "member" : "cats.mtl.Ask.askF", "link" : "cats\/mtl\/Ask$.html#askF[F[_]]:cats.mtl.Ask.askFPartiallyApplied[F]", "kind" : "def"}, {"label" : "ask", "tail" : "(ask: Ask[F, E]): F[E]", "member" : "cats.mtl.Ask.ask", "link" : "cats\/mtl\/Ask$.html#ask[F[_],E](implicitask:cats.mtl.Ask[F,E]):F[E]", "kind" : "def"}, {"label" : "const", "tail" : "(e: E)(arg0: Applicative[F]): Ask[F, E]", "member" : "cats.mtl.Ask.const", "link" : "cats\/mtl\/Ask$.html#const[F[_],E](e:E)(implicitevidence$1:cats.Applicative[F]):cats.mtl.Ask[F,E]", "kind" : "def"}, {"label" : "apply", "tail" : "(ask: Ask[F, E]): Ask[F, E]", "member" : "cats.mtl.Ask.apply", "link" : "cats\/mtl\/Ask$.html#apply[F[_],E](implicitask:cats.mtl.Ask[F,E]):cats.mtl.Ask[F,E]", "kind" : "def"}, {"label" : "askForRWST", "tail" : "(F: Monad[F], L: Monoid[L]): Ask[[ε$1$]IndexedReaderWriterStateT[F, E, L, S, S, ε$1$], E]", "member" : "cats.mtl.AskInstances.askForRWST", "link" : "cats\/mtl\/Ask$.html#askForRWST[F[_],E,L,S](implicitF:cats.Monad[F],implicitL:cats.Monoid[L]):cats.mtl.Ask[[ε$1$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$1$],E]", "kind" : "implicit def"}, {"label" : "askForKleisli", "tail" : "(F: Applicative[F]): Ask[[γ$0$]Kleisli[F, E, γ$0$], E]", "member" : "cats.mtl.AskInstances.askForKleisli", "link" : "cats\/mtl\/Ask$.html#askForKleisli[F[_],E](implicitF:cats.Applicative[F]):cats.mtl.Ask[[γ$0$]cats.data.Kleisli[F,E,γ$0$],E]", "kind" : "implicit def"}, {"label" : "askForMonadPartialOrder", "tail" : "(lift0: MonadPartialOrder[F, G], F0: Ask[F, E]): Ask[G, E]", "member" : "cats.mtl.LowPriorityAskInstances.askForMonadPartialOrder", "link" : "cats\/mtl\/Ask$.html#askForMonadPartialOrder[F[_],G[_],E](implicitlift0:cats.mtl.MonadPartialOrder[F,G],implicitF0:cats.mtl.Ask[F,E]):cats.mtl.Ask[G,E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Ask$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Ask$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Ask$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Ask$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Ask$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Ask$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Ask$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Ask$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Ask$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Ask$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Ask$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Ask$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Ask$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Ask$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Ask$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Ask$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Ask$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Ask$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Ask$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Ask.html", "kind" : "trait", "members_trait" : [{"label" : "reader", "tail" : "(f: (E) => A): F[A]", "member" : "cats.mtl.Ask.reader", "link" : "cats\/mtl\/Ask.html#reader[A](f:E=>A):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Ask.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Ask.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Ask.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Ask.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Ask.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Ask.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Ask.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Ask.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Ask.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Ask.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Ask.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Ask.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Ask.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Ask.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Ask.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Ask.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Ask.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Ask.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Ask.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ask", "tail" : "(): F[E2]", "member" : "cats.mtl.Ask.ask", "link" : "cats\/mtl\/Ask.html#ask[E2>:E]:F[E2]", "kind" : "abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "cats.mtl.Ask.applicative", "link" : "cats\/mtl\/Ask.html#applicative:cats.Applicative[F]", "kind" : "abstract def"}], "shortDescription" : "Ask[F, E] lets you access an E value in the F[_] context."}, {"name" : "cats.mtl.Censor", "object" : "cats\/mtl\/Censor$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Censor[F, L]): Censor[F, L]", "member" : "cats.mtl.Censor.apply", "link" : "cats\/mtl\/Censor$.html#apply[F[_],L](implicitev:cats.mtl.Censor[F,L]):cats.mtl.Censor[F,L]", "kind" : "def"}, {"label" : "censorOptionT", "tail" : "(L: Monoid[L], A: Censor[F, L], F: Monad[F]): Censor[[β$24$]OptionT[F, β$24$], L]", "member" : "cats.mtl.CensorInstances.censorOptionT", "link" : "cats\/mtl\/Censor$.html#censorOptionT[F[_],L](implicitL:cats.Monoid[L],implicitA:cats.mtl.Censor[F,L],implicitF:cats.Monad[F]):cats.mtl.Censor[[β$24$]cats.data.OptionT[F,β$24$],L]", "kind" : "implicit final def"}, {"label" : "censorIorT", "tail" : "(L: Monoid[L], A: Censor[F, L], F: Monad[F], E: Semigroup[E]): Censor[[γ$21$]IorT[F, E, γ$21$], L]", "member" : "cats.mtl.CensorInstances.censorIorT", "link" : "cats\/mtl\/Censor$.html#censorIorT[F[_],E,L](implicitL:cats.Monoid[L],implicitA:cats.mtl.Censor[F,L],implicitF:cats.Monad[F],implicitE:cats.Semigroup[E]):cats.mtl.Censor[[γ$21$]cats.data.IorT[F,E,γ$21$],L]", "kind" : "implicit final def"}, {"label" : "censorEitherT", "tail" : "(L: Monoid[L], A: Censor[F, L], F: Monad[F]): Censor[[γ$18$]EitherT[F, E, γ$18$], L]", "member" : "cats.mtl.CensorInstances.censorEitherT", "link" : "cats\/mtl\/Censor$.html#censorEitherT[F[_],E,L](implicitL:cats.Monoid[L],implicitA:cats.mtl.Censor[F,L],implicitF:cats.Monad[F]):cats.mtl.Censor[[γ$18$]cats.data.EitherT[F,E,γ$18$],L]", "kind" : "implicit final def"}, {"label" : "censorStateT", "tail" : "(L: Monoid[L], A: Censor[F, L], F: Monad[F]): Censor[[γ$15$]IndexedStateT[F, S, S, γ$15$], L]", "member" : "cats.mtl.CensorInstances.censorStateT", "link" : "cats\/mtl\/Censor$.html#censorStateT[F[_],S,L](implicitL:cats.Monoid[L],implicitA:cats.mtl.Censor[F,L],implicitF:cats.Monad[F]):cats.mtl.Censor[[γ$15$]cats.data.IndexedStateT[F,S,S,γ$15$],L]", "kind" : "implicit final def"}, {"label" : "censorKleisli", "tail" : "(L: Monoid[L], A: Censor[F, L], F: Applicative[F]): Censor[[γ$12$]Kleisli[F, R, γ$12$], L]", "member" : "cats.mtl.CensorInstances.censorKleisli", "link" : "cats\/mtl\/Censor$.html#censorKleisli[F[_],R,L](implicitL:cats.Monoid[L],implicitA:cats.mtl.Censor[F,L],implicitF:cats.Applicative[F]):cats.mtl.Censor[[γ$12$]cats.data.Kleisli[F,R,γ$12$],L]", "kind" : "implicit final def"}, {"label" : "censorRWST", "tail" : "(L: Monoid[L], M: Monad[M]): Censor[[ε$9$]IndexedReaderWriterStateT[M, R, L, S, S, ε$9$], L]", "member" : "cats.mtl.CensorInstances.censorRWST", "link" : "cats\/mtl\/Censor$.html#censorRWST[M[_],R,L,S](implicitL:cats.Monoid[L],implicitM:cats.Monad[M]):cats.mtl.Censor[[ε$9$]cats.data.IndexedReaderWriterStateT[M,R,L,S,S,ε$9$],L]", "kind" : "implicit final def"}, {"label" : "censorWriterT", "tail" : "(M: Applicative[M], L: Monoid[L]): Censor[[γ$6$]WriterT[M, L, γ$6$], L]", "member" : "cats.mtl.CensorInstances.censorWriterT", "link" : "cats\/mtl\/Censor$.html#censorWriterT[M[_],L](implicitM:cats.Applicative[M],implicitL:cats.Monoid[L]):cats.mtl.Censor[[γ$6$]cats.data.WriterT[M,L,γ$6$],L]", "kind" : "implicit final def"}, {"label" : "inductiveCensorRWST", "tail" : "(arg0: Monad[M], arg1: Monoid[L0], arg2: Monoid[L], A: Censor[M, L]): Censor[[ε$3$]IndexedReaderWriterStateT[M, R, L0, S, S, ε$3$], L]", "member" : "cats.mtl.LowPriorityCensorInstances.inductiveCensorRWST", "link" : "cats\/mtl\/Censor$.html#inductiveCensorRWST[M[_],R,L0,L,S](implicitevidence$4:cats.Monad[M],implicitevidence$5:cats.Monoid[L0],implicitevidence$6:cats.Monoid[L],implicitA:cats.mtl.Censor[M,L]):cats.mtl.Censor[[ε$3$]cats.data.IndexedReaderWriterStateT[M,R,L0,S,S,ε$3$],L]", "kind" : "implicit final def"}, {"label" : "inductiveCensorWriterT", "tail" : "(arg0: Applicative[M], arg1: Monoid[L0], arg2: Monoid[L], A: Censor[M, L]): Censor[[γ$0$]WriterT[M, L0, γ$0$], L]", "member" : "cats.mtl.LowPriorityCensorInstances.inductiveCensorWriterT", "link" : "cats\/mtl\/Censor$.html#inductiveCensorWriterT[M[_],L0,L](implicitevidence$1:cats.Applicative[M],implicitevidence$2:cats.Monoid[L0],implicitevidence$3:cats.Monoid[L],implicitA:cats.mtl.Censor[M,L]):cats.mtl.Censor[[γ$0$]cats.data.WriterT[M,L0,γ$0$],L]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Censor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Censor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Censor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Censor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Censor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Censor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Censor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Censor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Censor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Censor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Censor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Censor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Censor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Censor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Censor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Censor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Censor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Censor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Censor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Censor.html", "kind" : "trait", "members_trait" : [{"label" : "clear", "tail" : "(fa: F[A]): F[A]", "member" : "cats.mtl.Censor.clear", "link" : "cats\/mtl\/Censor.html#clear[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "cats.mtl.Censor.functor", "link" : "cats\/mtl\/Censor.html#functor:cats.Functor[F]", "kind" : "final def"}, {"label" : "listens", "tail" : "(fa: F[A])(f: (L) => B): F[(A, B)]", "member" : "cats.mtl.Listen.listens", "link" : "cats\/mtl\/Censor.html#listens[A,B](fa:F[A])(f:L=>B):F[(A,B)]", "kind" : "def"}, {"label" : "tuple", "tail" : "(ta: (L, A)): F[A]", "member" : "cats.mtl.Tell.tuple", "link" : "cats\/mtl\/Censor.html#tuple[A](ta:(L,A)):F[A]", "kind" : "def"}, {"label" : "writer", "tail" : "(a: A, l: L): F[A]", "member" : "cats.mtl.Tell.writer", "link" : "cats\/mtl\/Censor.html#writer[A](a:A,l:L):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Censor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Censor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Censor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Censor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Censor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Censor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Censor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Censor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Censor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Censor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Censor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Censor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Censor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Censor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Censor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Censor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Censor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Censor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Censor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "censor", "tail" : "(fa: F[A])(f: (L) => L): F[A]", "member" : "cats.mtl.Censor.censor", "link" : "cats\/mtl\/Censor.html#censor[A](fa:F[A])(f:L=>L):F[A]", "kind" : "abstract def"}, {"label" : "monoid", "tail" : ": Monoid[L]", "member" : "cats.mtl.Censor.monoid", "link" : "cats\/mtl\/Censor.html#monoid:cats.Monoid[L]", "kind" : "abstract val"}, {"label" : "applicative", "tail" : ": Applicative[F]", "member" : "cats.mtl.Censor.applicative", "link" : "cats\/mtl\/Censor.html#applicative:cats.Applicative[F]", "kind" : "abstract val"}, {"label" : "listen", "tail" : "(fa: F[A]): F[(A, L)]", "member" : "cats.mtl.Listen.listen", "link" : "cats\/mtl\/Censor.html#listen[A](fa:F[A]):F[(A,L)]", "kind" : "abstract def"}, {"label" : "tell", "tail" : "(l: L): F[Unit]", "member" : "cats.mtl.Tell.tell", "link" : "cats\/mtl\/Censor.html#tell(l:L):F[Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "cats.mtl.Chronicle", "object" : "cats\/mtl\/Chronicle$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Chronicle[F, E]): Chronicle[F, E]", "member" : "cats.mtl.Chronicle.apply", "link" : "cats\/mtl\/Chronicle$.html#apply[F[_],E](implicitev:cats.mtl.Chronicle[F,E]):cats.mtl.Chronicle[F,E]", "kind" : "def"}, {"label" : "chronicle", "tail" : "(ior: Ior[E, A])(ev: Chronicle[F, E]): F[A]", "member" : "cats.mtl.Chronicle.chronicle", "link" : "cats\/mtl\/Chronicle$.html#chronicle[F[_],E,A](ior:cats.data.Ior[E,A])(implicitev:cats.mtl.Chronicle[F,E]):F[A]", "kind" : "def"}, {"label" : "materialize", "tail" : "(fa: F[A])(ev: Chronicle[F, E]): F[Ior[E, A]]", "member" : "cats.mtl.Chronicle.materialize", "link" : "cats\/mtl\/Chronicle$.html#materialize[F[_],E,A](fa:F[A])(implicitev:cats.mtl.Chronicle[F,E]):F[cats.data.Ior[E,A]]", "kind" : "def"}, {"label" : "confess", "tail" : "(c: E)(ev: Chronicle[F, E]): F[A]", "member" : "cats.mtl.Chronicle.confess", "link" : "cats\/mtl\/Chronicle$.html#confess[F[_],E,A](c:E)(implicitev:cats.mtl.Chronicle[F,E]):F[A]", "kind" : "def"}, {"label" : "disclose", "tail" : "(c: E)(ev: Chronicle[F, E], m: Monoid[A]): F[A]", "member" : "cats.mtl.Chronicle.disclose", "link" : "cats\/mtl\/Chronicle$.html#disclose[F[_],A,E](c:E)(implicitev:cats.mtl.Chronicle[F,E],implicitm:cats.Monoid[A]):F[A]", "kind" : "def"}, {"label" : "dictate", "tail" : "(e: E)(ev: Chronicle[F, E]): F[Unit]", "member" : "cats.mtl.Chronicle.dictate", "link" : "cats\/mtl\/Chronicle$.html#dictate[F[_],E](e:E)(implicitev:cats.mtl.Chronicle[F,E]):F[Unit]", "kind" : "def"}, {"label" : "chronicleForRWST", "tail" : "(arg0: Monad[F], arg1: Monoid[L], F: Chronicle[F, E]): Chronicle[[ε$21$]IndexedReaderWriterStateT[F, R, L, S, S, ε$21$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleForRWST", "link" : "cats\/mtl\/Chronicle$.html#chronicleForRWST[F[_],E,R,L,S](implicitevidence$8:cats.Monad[F],implicitevidence$9:cats.Monoid[L],implicitF:cats.mtl.Chronicle[F,E]):cats.mtl.Chronicle[[ε$21$]cats.data.IndexedReaderWriterStateT[F,R,L,S,S,ε$21$],E]", "kind" : "implicit def"}, {"label" : "chronicleForOptionT", "tail" : "(arg0: Monad[F], F: Chronicle[F, E]): Chronicle[[β$18$]OptionT[F, β$18$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleForOptionT", "link" : "cats\/mtl\/Chronicle$.html#chronicleForOptionT[F[_],E](implicitevidence$7:cats.Monad[F],implicitF:cats.mtl.Chronicle[F,E]):cats.mtl.Chronicle[[β$18$]cats.data.OptionT[F,β$18$],E]", "kind" : "implicit def"}, {"label" : "chronicleForStateT", "tail" : "(arg0: Monad[F], F: Chronicle[F, E]): Chronicle[[γ$15$]IndexedStateT[F, S, S, γ$15$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleForStateT", "link" : "cats\/mtl\/Chronicle$.html#chronicleForStateT[F[_],E,S](implicitevidence$6:cats.Monad[F],implicitF:cats.mtl.Chronicle[F,E]):cats.mtl.Chronicle[[γ$15$]cats.data.IndexedStateT[F,S,S,γ$15$],E]", "kind" : "implicit def"}, {"label" : "chronicleForKleisli", "tail" : "(arg0: Monad[F], F: Chronicle[F, E]): Chronicle[[γ$12$]Kleisli[F, R, γ$12$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleForKleisli", "link" : "cats\/mtl\/Chronicle$.html#chronicleForKleisli[F[_],E,R](implicitevidence$5:cats.Monad[F],implicitF:cats.mtl.Chronicle[F,E]):cats.mtl.Chronicle[[γ$12$]cats.data.Kleisli[F,R,γ$12$],E]", "kind" : "implicit def"}, {"label" : "chronicleForEitherT", "tail" : "(arg0: Monad[F], F: Chronicle[F, E]): Chronicle[[γ$9$]EitherT[F, E2, γ$9$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleForEitherT", "link" : "cats\/mtl\/Chronicle$.html#chronicleForEitherT[F[_],E,E2](implicitevidence$4:cats.Monad[F],implicitF:cats.mtl.Chronicle[F,E]):cats.mtl.Chronicle[[γ$9$]cats.data.EitherT[F,E2,γ$9$],E]", "kind" : "implicit def"}, {"label" : "chronicleForWriterT", "tail" : "(arg0: Monad[F], arg1: Monoid[L], F: Chronicle[F, E]): Chronicle[[γ$6$]WriterT[F, L, γ$6$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleForWriterT", "link" : "cats\/mtl\/Chronicle$.html#chronicleForWriterT[F[_],E,L](implicitevidence$2:cats.Monad[F],implicitevidence$3:cats.Monoid[L],implicitF:cats.mtl.Chronicle[F,E]):cats.mtl.Chronicle[[γ$6$]cats.data.WriterT[F,L,γ$6$],E]", "kind" : "implicit def"}, {"label" : "chronicleIor", "tail" : "(S: Semigroup[E]): Chronicle[[β$3$]Ior[E, β$3$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleIor", "link" : "cats\/mtl\/Chronicle$.html#chronicleIor[E](implicitS:cats.Semigroup[E]):cats.mtl.Chronicle[[β$3$]cats.data.Ior[E,β$3$],E]", "kind" : "implicit final def"}, {"label" : "chronicleForIorT", "tail" : "(arg0: Semigroup[E], F: Monad[F]): Chronicle[[γ$0$]IorT[F, E, γ$0$], E]", "member" : "cats.mtl.ChronicleInstances.chronicleForIorT", "link" : "cats\/mtl\/Chronicle$.html#chronicleForIorT[F[_],E](implicitevidence$1:cats.Semigroup[E],implicitF:cats.Monad[F]):cats.mtl.Chronicle[[γ$0$]cats.data.IorT[F,E,γ$0$],E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Chronicle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Chronicle$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Chronicle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Chronicle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Chronicle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Chronicle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Chronicle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Chronicle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Chronicle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Chronicle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Chronicle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Chronicle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Chronicle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Chronicle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Chronicle$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Chronicle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Chronicle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Chronicle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Chronicle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Chronicle.html", "kind" : "trait", "members_trait" : [{"label" : "chronicle", "tail" : "(ior: Ior[E, A]): F[A]", "member" : "cats.mtl.Chronicle.chronicle", "link" : "cats\/mtl\/Chronicle.html#chronicle[A](ior:cats.data.Ior[E,A]):F[A]", "kind" : "def"}, {"label" : "retcon", "tail" : "(fa: F[A])(cc: (E) => E): F[A]", "member" : "cats.mtl.Chronicle.retcon", "link" : "cats\/mtl\/Chronicle.html#retcon[A](fa:F[A])(cc:E=>E):F[A]", "kind" : "def"}, {"label" : "condemn", "tail" : "(fa: F[A]): F[A]", "member" : "cats.mtl.Chronicle.condemn", "link" : "cats\/mtl\/Chronicle.html#condemn[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "absolve", "tail" : "(fa: F[A])(a: => A): F[A]", "member" : "cats.mtl.Chronicle.absolve", "link" : "cats\/mtl\/Chronicle.html#absolve[A](fa:F[A])(a:=>A):F[A]", "kind" : "def"}, {"label" : "memento", "tail" : "(fa: F[A]): F[Either[E, A]]", "member" : "cats.mtl.Chronicle.memento", "link" : "cats\/mtl\/Chronicle.html#memento[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "disclose", "tail" : "(c: E)(M: Monoid[A]): F[A]", "member" : "cats.mtl.Chronicle.disclose", "link" : "cats\/mtl\/Chronicle.html#disclose[A](c:E)(implicitM:cats.Monoid[A]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Chronicle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Chronicle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Chronicle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Chronicle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Chronicle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Chronicle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Chronicle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Chronicle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Chronicle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Chronicle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Chronicle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Chronicle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Chronicle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Chronicle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Chronicle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Chronicle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Chronicle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Chronicle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Chronicle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "materialize", "tail" : "(fa: F[A]): F[Ior[E, A]]", "member" : "cats.mtl.Chronicle.materialize", "link" : "cats\/mtl\/Chronicle.html#materialize[A](fa:F[A]):F[cats.data.Ior[E,A]]", "kind" : "abstract def"}, {"label" : "confess", "tail" : "(c: E): F[A]", "member" : "cats.mtl.Chronicle.confess", "link" : "cats\/mtl\/Chronicle.html#confess[A](c:E):F[A]", "kind" : "abstract def"}, {"label" : "dictate", "tail" : "(c: E): F[Unit]", "member" : "cats.mtl.Chronicle.dictate", "link" : "cats\/mtl\/Chronicle.html#dictate(c:E):F[Unit]", "kind" : "abstract def"}, {"label" : "monad", "tail" : ": Monad[F]", "member" : "cats.mtl.Chronicle.monad", "link" : "cats\/mtl\/Chronicle.html#monad:cats.Monad[F]", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "cats.mtl.Handle", "object" : "cats\/mtl\/Handle$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Handle[F, E]): Handle[F, E]", "member" : "cats.mtl.Handle.apply", "link" : "cats\/mtl\/Handle$.html#apply[F[_],E](implicitev:cats.mtl.Handle[F,E]):cats.mtl.Handle[F,E]", "kind" : "def"}, {"label" : "handleRWST", "tail" : "(F0: Handle[F, E], M: Monad[F], L: Monoid[L]): Handle[[ε$24$]IndexedReaderWriterStateT[F, R, L, S, S, ε$24$], E]", "member" : "cats.mtl.HandleInstances.handleRWST", "link" : "cats\/mtl\/Handle$.html#handleRWST[F[_],E,R,L,S](implicitF0:cats.mtl.Handle[F,E],implicitM:cats.Monad[F],implicitL:cats.Monoid[L]):cats.mtl.Handle[[ε$24$]cats.data.IndexedReaderWriterStateT[F,R,L,S,S,ε$24$],E]", "kind" : "implicit final def"}, {"label" : "handleStateT", "tail" : "(F0: Handle[F, E], M: Monad[F]): Handle[[γ$19$]IndexedStateT[F, S, S, γ$19$], E]", "member" : "cats.mtl.HandleInstances.handleStateT", "link" : "cats\/mtl\/Handle$.html#handleStateT[F[_],E,S](implicitF0:cats.mtl.Handle[F,E],implicitM:cats.Monad[F]):cats.mtl.Handle[[γ$19$]cats.data.IndexedStateT[F,S,S,γ$19$],E]", "kind" : "implicit final def"}, {"label" : "handleWriterT", "tail" : "(F0: Handle[F, E], M: Monad[F], L: Monoid[L]): Handle[[γ$14$]WriterT[F, L, γ$14$], E]", "member" : "cats.mtl.HandleInstances.handleWriterT", "link" : "cats\/mtl\/Handle$.html#handleWriterT[F[_],E,L](implicitF0:cats.mtl.Handle[F,E],implicitM:cats.Monad[F],implicitL:cats.Monoid[L]):cats.mtl.Handle[[γ$14$]cats.data.WriterT[F,L,γ$14$],E]", "kind" : "implicit final def"}, {"label" : "handleKleisli", "tail" : "(F0: Handle[F, E], M: Monad[F]): Handle[[γ$9$]Kleisli[F, R, γ$9$], E]", "member" : "cats.mtl.HandleInstances.handleKleisli", "link" : "cats\/mtl\/Handle$.html#handleKleisli[F[_],E,R](implicitF0:cats.mtl.Handle[F,E],implicitM:cats.Monad[F]):cats.mtl.Handle[[γ$9$]cats.data.Kleisli[F,R,γ$9$],E]", "kind" : "implicit final def"}, {"label" : "handleIor", "tail" : "(E: Semigroup[E]): Handle[[β$6$]Ior[E, β$6$], E]", "member" : "cats.mtl.HandleInstances.handleIor", "link" : "cats\/mtl\/Handle$.html#handleIor[E](implicitE:cats.Semigroup[E]):cats.mtl.Handle[[β$6$]cats.data.Ior[E,β$6$],E]", "kind" : "implicit final def"}, {"label" : "handleIorT", "tail" : "(E: Semigroup[E], F: Monad[F]): Handle[[γ$3$]IorT[F, E, γ$3$], E]", "member" : "cats.mtl.HandleInstances.handleIorT", "link" : "cats\/mtl\/Handle$.html#handleIorT[F[_],E](implicitE:cats.Semigroup[E],implicitF:cats.Monad[F]):cats.mtl.Handle[[γ$3$]cats.data.IorT[F,E,γ$3$],E]", "kind" : "implicit final def"}, {"label" : "handleValidated", "tail" : "(E: Semigroup[E]): Handle[[β$0$]Validated[E, β$0$], E]", "member" : "cats.mtl.HandleInstances.handleValidated", "link" : "cats\/mtl\/Handle$.html#handleValidated[E](implicitE:cats.Semigroup[E]):cats.mtl.Handle[[β$0$]cats.data.Validated[E,β$0$],E]", "kind" : "implicit final def"}, {"label" : "handleOption", "tail" : "(): Handle[Option, Unit]", "member" : "cats.mtl.HandleInstances.handleOption", "link" : "cats\/mtl\/Handle$.html#handleOption:cats.mtl.Handle[Option,Unit]", "kind" : "implicit final def"}, {"label" : "handleOptionT", "tail" : "(M: Monad[M]): Handle[[A]OptionT[M, A], Unit]", "member" : "cats.mtl.HandleInstances.handleOptionT", "link" : "cats\/mtl\/Handle$.html#handleOptionT[M[_]](implicitM:cats.Monad[M]):cats.mtl.Handle[[A]cats.data.OptionT[M,A],Unit]", "kind" : "implicit final def"}, {"label" : "handleEither", "tail" : "(): Handle[[A]Either[E, A], E]", "member" : "cats.mtl.HandleInstances.handleEither", "link" : "cats\/mtl\/Handle$.html#handleEither[E]:cats.mtl.Handle[[A]scala.util.Either[E,A],E]", "kind" : "implicit final def"}, {"label" : "handleEitherT", "tail" : "(M: Monad[M]): Handle[[A]EitherT[M, E, A], E]", "member" : "cats.mtl.HandleInstances.handleEitherT", "link" : "cats\/mtl\/Handle$.html#handleEitherT[M[_],E](implicitM:cats.Monad[M]):cats.mtl.Handle[[A]cats.data.EitherT[M,E,A],E]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Handle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Handle$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Handle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Handle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Handle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Handle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Handle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Handle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Handle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Handle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Handle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Handle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Handle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Handle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Handle$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Handle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Handle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Handle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Handle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Handle.html", "kind" : "trait", "members_trait" : [{"label" : "handle", "tail" : "(fa: F[A])(f: (E) => A): F[A]", "member" : "cats.mtl.Handle.handle", "link" : "cats\/mtl\/Handle.html#handle[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, E, A]", "member" : "cats.mtl.Handle.attemptT", "link" : "cats\/mtl\/Handle.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[E, A]]", "member" : "cats.mtl.Handle.attempt", "link" : "cats\/mtl\/Handle.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "cats.mtl.Handle.functor", "link" : "cats\/mtl\/Handle.html#functor:cats.Functor[F]", "kind" : "final def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => E2)(predicate: (A) => Boolean)(A: Monad[F]): F[A]", "member" : "cats.mtl.Raise.ensure", "link" : "cats\/mtl\/Handle.html#ensure[E2<:E,A](fa:F[A])(error:=>E2)(predicate:A=>Boolean)(implicitA:cats.Monad[F]):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(f: (Throwable) => E2)(A: Applicative[F]): F[A]", "member" : "cats.mtl.Raise.catchNonFatal", "link" : "cats\/mtl\/Handle.html#catchNonFatal[E2<:E,A](a:=>A)(f:Throwable=>E2)(implicitA:cats.Applicative[F]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Handle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Handle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Handle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Handle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Handle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Handle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Handle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Handle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Handle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Handle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Handle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Handle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Handle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Handle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Handle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Handle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Handle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Handle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Handle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handleWith", "tail" : "(fa: F[A])(f: (E) => F[A]): F[A]", "member" : "cats.mtl.Handle.handleWith", "link" : "cats\/mtl\/Handle.html#handleWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "cats.mtl.Handle.applicative", "link" : "cats\/mtl\/Handle.html#applicative:cats.Applicative[F]", "kind" : "abstract def"}, {"label" : "raise", "tail" : "(e: E2): F[A]", "member" : "cats.mtl.Raise.raise", "link" : "cats\/mtl\/Handle.html#raise[E2<:E,A](e:E2):F[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "cats.mtl.Listen", "object" : "cats\/mtl\/Listen$.html", "members_object" : [{"label" : "listens", "tail" : "(fa: F[A])(f: (L) => B)(ev: Listen[F, L]): F[(A, B)]", "member" : "cats.mtl.Listen.listens", "link" : "cats\/mtl\/Listen$.html#listens[F[_],L,A,B](fa:F[A])(f:L=>B)(implicitev:cats.mtl.Listen[F,L]):F[(A,B)]", "kind" : "def"}, {"label" : "listen", "tail" : "(fa: F[A])(ev: Listen[F, L]): F[(A, L)]", "member" : "cats.mtl.Listen.listen", "link" : "cats\/mtl\/Listen$.html#listen[F[_],L,A](fa:F[A])(implicitev:cats.mtl.Listen[F,L]):F[(A,L)]", "kind" : "def"}, {"label" : "apply", "tail" : "(listen: Listen[F, L]): Listen[F, L]", "member" : "cats.mtl.Listen.apply", "link" : "cats\/mtl\/Listen$.html#apply[F[_],L](implicitlisten:cats.mtl.Listen[F,L]):cats.mtl.Listen[F,L]", "kind" : "def"}, {"label" : "baseListenForRWST", "tail" : "(arg0: Applicative[F]): Listen[[ε$26$]IndexedReaderWriterStateT[F, E, L, S, S, ε$26$], L]", "member" : "cats.mtl.ListenInstances.baseListenForRWST", "link" : "cats\/mtl\/Listen$.html#baseListenForRWST[F[_],E,L,S](implicitevidence$22:cats.Applicative[F]):cats.mtl.Listen[[ε$26$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$26$],L]", "kind" : "implicit def"}, {"label" : "listenForIorT", "tail" : "(arg0: Applicative[F], F: Listen[F, K]): Listen[[γ$25$]IorT[F, L, γ$25$], K]", "member" : "cats.mtl.ListenInstances.listenForIorT", "link" : "cats\/mtl\/Listen$.html#listenForIorT[F[_],K,L](implicitevidence$21:cats.Applicative[F],implicitF:cats.mtl.Listen[F,K]):cats.mtl.Listen[[γ$25$]cats.data.IorT[F,L,γ$25$],K]", "kind" : "implicit def"}, {"label" : "baseListenForWriterT", "tail" : "(arg0: Applicative[F]): Listen[[γ$24$]WriterT[F, L, γ$24$], L]", "member" : "cats.mtl.ListenInstances.baseListenForWriterT", "link" : "cats\/mtl\/Listen$.html#baseListenForWriterT[F[_],L](implicitevidence$20:cats.Applicative[F]):cats.mtl.Listen[[γ$24$]cats.data.WriterT[F,L,γ$24$],L]", "kind" : "implicit def"}, {"label" : "listenForStateT", "tail" : "(arg0: Applicative[F], F: Listen[F, L]): Listen[[γ$23$]IndexedStateT[F, S, S, γ$23$], L]", "member" : "cats.mtl.ListenInstances.listenForStateT", "link" : "cats\/mtl\/Listen$.html#listenForStateT[F[_],S,L](implicitevidence$19:cats.Applicative[F],implicitF:cats.mtl.Listen[F,L]):cats.mtl.Listen[[γ$23$]cats.data.IndexedStateT[F,S,S,γ$23$],L]", "kind" : "implicit def"}, {"label" : "listenForOptionT", "tail" : "(arg0: Functor[F], F: Listen[F, L]): Listen[[β$22$]OptionT[F, β$22$], L]", "member" : "cats.mtl.ListenInstances.listenForOptionT", "link" : "cats\/mtl\/Listen$.html#listenForOptionT[F[_],L](implicitevidence$18:cats.Functor[F],implicitF:cats.mtl.Listen[F,L]):cats.mtl.Listen[[β$22$]cats.data.OptionT[F,β$22$],L]", "kind" : "implicit def"}, {"label" : "listenForKleisli", "tail" : "(arg0: Functor[F], F: Listen[F, L]): Listen[[γ$21$]Kleisli[F, R, γ$21$], L]", "member" : "cats.mtl.ListenInstances.listenForKleisli", "link" : "cats\/mtl\/Listen$.html#listenForKleisli[F[_],R,L](implicitevidence$17:cats.Functor[F],implicitF:cats.mtl.Listen[F,L]):cats.mtl.Listen[[γ$21$]cats.data.Kleisli[F,R,γ$21$],L]", "kind" : "implicit def"}, {"label" : "listenForEitherT", "tail" : "(arg0: Functor[F], F: Listen[F, L]): Listen[[γ$20$]EitherT[F, E, γ$20$], L]", "member" : "cats.mtl.ListenInstances.listenForEitherT", "link" : "cats\/mtl\/Listen$.html#listenForEitherT[F[_],E,L](implicitevidence$16:cats.Functor[F],implicitF:cats.mtl.Listen[F,L]):cats.mtl.Listen[[γ$20$]cats.data.EitherT[F,E,γ$20$],L]", "kind" : "implicit def"}, {"label" : "inductiveListenForRWST", "tail" : "(arg0: Applicative[F], arg1: Monoid[L0], F: Listen[F, L]): Listen[[ε$19$]IndexedReaderWriterStateT[F, E, L0, S, S, ε$19$], L]", "member" : "cats.mtl.LowPriorityListenInstances.inductiveListenForRWST", "link" : "cats\/mtl\/Listen$.html#inductiveListenForRWST[F[_],E,L0,S,L](implicitevidence$14:cats.Applicative[F],implicitevidence$15:cats.Monoid[L0],implicitF:cats.mtl.Listen[F,L]):cats.mtl.Listen[[ε$19$]cats.data.IndexedReaderWriterStateT[F,E,L0,S,S,ε$19$],L]", "kind" : "implicit def"}, {"label" : "inductiveListenForWriterT", "tail" : "(arg0: Applicative[F], arg1: Monoid[L0], F: Listen[F, L]): Listen[[γ$18$]WriterT[F, L0, γ$18$], L]", "member" : "cats.mtl.LowPriorityListenInstances.inductiveListenForWriterT", "link" : "cats\/mtl\/Listen$.html#inductiveListenForWriterT[F[_],L,L0](implicitevidence$12:cats.Applicative[F],implicitevidence$13:cats.Monoid[L0],implicitF:cats.mtl.Listen[F,L]):cats.mtl.Listen[[γ$18$]cats.data.WriterT[F,L0,γ$18$],L]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Listen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Listen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Listen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Listen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Listen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Listen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Listen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Listen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Listen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Listen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Listen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Listen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Listen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Listen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Listen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Listen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Listen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Listen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Listen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Listen.html", "kind" : "trait", "members_trait" : [{"label" : "listens", "tail" : "(fa: F[A])(f: (L) => B): F[(A, B)]", "member" : "cats.mtl.Listen.listens", "link" : "cats\/mtl\/Listen.html#listens[A,B](fa:F[A])(f:L=>B):F[(A,B)]", "kind" : "def"}, {"label" : "tuple", "tail" : "(ta: (L, A)): F[A]", "member" : "cats.mtl.Tell.tuple", "link" : "cats\/mtl\/Listen.html#tuple[A](ta:(L,A)):F[A]", "kind" : "def"}, {"label" : "writer", "tail" : "(a: A, l: L): F[A]", "member" : "cats.mtl.Tell.writer", "link" : "cats\/mtl\/Listen.html#writer[A](a:A,l:L):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Listen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Listen.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Listen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Listen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Listen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Listen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Listen.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Listen.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Listen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Listen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Listen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Listen.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Listen.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Listen.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Listen.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Listen.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Listen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Listen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Listen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "listen", "tail" : "(fa: F[A]): F[(A, L)]", "member" : "cats.mtl.Listen.listen", "link" : "cats\/mtl\/Listen.html#listen[A](fa:F[A]):F[(A,L)]", "kind" : "abstract def"}, {"label" : "tell", "tail" : "(l: L): F[Unit]", "member" : "cats.mtl.Tell.tell", "link" : "cats\/mtl\/Listen.html#tell(l:L):F[Unit]", "kind" : "abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "cats.mtl.Tell.functor", "link" : "cats\/mtl\/Listen.html#functor:cats.Functor[F]", "kind" : "abstract def"}], "shortDescription" : "Listen[F, L] is a function F[A] => F[(A, L)] which exposes some statethat is contained in all F[A] values, and can be modified using tell."}, {"name" : "cats.mtl.Local", "object" : "cats\/mtl\/Local$.html", "members_object" : [{"label" : "scope", "tail" : "(fa: F[A])(e: E)(local: Local[F, E]): F[A]", "member" : "cats.mtl.Local.scope", "link" : "cats\/mtl\/Local$.html#scope[F[_],E,A](fa:F[A])(e:E)(implicitlocal:cats.mtl.Local[F,E]):F[A]", "kind" : "def"}, {"label" : "local", "tail" : "(fa: F[A])(f: (E) => E)(local: Local[F, E]): F[A]", "member" : "cats.mtl.Local.local", "link" : "cats\/mtl\/Local$.html#local[F[_],E,A](fa:F[A])(f:E=>E)(implicitlocal:cats.mtl.Local[F,E]):F[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(local: Local[F, A]): Local[F, A]", "member" : "cats.mtl.Local.apply", "link" : "cats\/mtl\/Local$.html#apply[F[_],A](implicitlocal:cats.mtl.Local[F,A]):cats.mtl.Local[F,A]", "kind" : "def"}, {"label" : "localForIorT", "tail" : "(arg0: Monad[F], arg1: Semigroup[E2], F0: Local[F, E]): Local[[γ$30$]IorT[F, E2, γ$30$], E]", "member" : "cats.mtl.LocalInstances.localForIorT", "link" : "cats\/mtl\/Local$.html#localForIorT[F[_],E,E2](implicitevidence$9:cats.Monad[F],implicitevidence$10:cats.Semigroup[E2],implicitF0:cats.mtl.Local[F,E]):cats.mtl.Local[[γ$30$]cats.data.IorT[F,E2,γ$30$],E]", "kind" : "implicit def"}, {"label" : "localForOptionT", "tail" : "(arg0: Monad[F], F0: Local[F, E]): Local[[β$26$]OptionT[F, β$26$], E]", "member" : "cats.mtl.LocalInstances.localForOptionT", "link" : "cats\/mtl\/Local$.html#localForOptionT[F[_],E](implicitevidence$8:cats.Monad[F],implicitF0:cats.mtl.Local[F,E]):cats.mtl.Local[[β$26$]cats.data.OptionT[F,β$26$],E]", "kind" : "implicit def"}, {"label" : "localForEitherT", "tail" : "(arg0: Monad[F], F0: Local[F, E]): Local[[γ$22$]EitherT[F, E2, γ$22$], E]", "member" : "cats.mtl.LocalInstances.localForEitherT", "link" : "cats\/mtl\/Local$.html#localForEitherT[F[_],E,E2](implicitevidence$7:cats.Monad[F],implicitF0:cats.mtl.Local[F,E]):cats.mtl.Local[[γ$22$]cats.data.EitherT[F,E2,γ$22$],E]", "kind" : "implicit def"}, {"label" : "localForStateT", "tail" : "(arg0: Monad[F], F0: Local[F, E]): Local[[γ$18$]IndexedStateT[F, S, S, γ$18$], E]", "member" : "cats.mtl.LocalInstances.localForStateT", "link" : "cats\/mtl\/Local$.html#localForStateT[F[_],E,S](implicitevidence$6:cats.Monad[F],implicitF0:cats.mtl.Local[F,E]):cats.mtl.Local[[γ$18$]cats.data.IndexedStateT[F,S,S,γ$18$],E]", "kind" : "implicit def"}, {"label" : "localForRWST", "tail" : "(arg0: Monad[F], arg1: Monoid[L], F0: Local[F, E]): Local[[ε$14$]IndexedReaderWriterStateT[F, R, L, S, S, ε$14$], E]", "member" : "cats.mtl.LocalInstances.localForRWST", "link" : "cats\/mtl\/Local$.html#localForRWST[F[_],E,R,L,S](implicitevidence$4:cats.Monad[F],implicitevidence$5:cats.Monoid[L],implicitF0:cats.mtl.Local[F,E]):cats.mtl.Local[[ε$14$]cats.data.IndexedReaderWriterStateT[F,R,L,S,S,ε$14$],E]", "kind" : "implicit def"}, {"label" : "localForWriterT", "tail" : "(arg0: Monad[F], arg1: Monoid[L], F0: Local[F, E]): Local[[γ$10$]WriterT[F, L, γ$10$], E]", "member" : "cats.mtl.LocalInstances.localForWriterT", "link" : "cats\/mtl\/Local$.html#localForWriterT[F[_],E,L](implicitevidence$2:cats.Monad[F],implicitevidence$3:cats.Monoid[L],implicitF0:cats.mtl.Local[F,E]):cats.mtl.Local[[γ$10$]cats.data.WriterT[F,L,γ$10$],E]", "kind" : "implicit def"}, {"label" : "baseLocalForRWST", "tail" : "(F: Monad[F], L: Monoid[L]): Local[[ε$7$]IndexedReaderWriterStateT[F, E, L, S, S, ε$7$], E]", "member" : "cats.mtl.LocalInstances.baseLocalForRWST", "link" : "cats\/mtl\/Local$.html#baseLocalForRWST[F[_],E,L,S](implicitF:cats.Monad[F],implicitL:cats.Monoid[L]):cats.mtl.Local[[ε$7$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$7$],E]", "kind" : "implicit def"}, {"label" : "baseLocalForKleisli", "tail" : "(F: Applicative[F]): Local[[γ$4$]Kleisli[F, E, γ$4$], E]", "member" : "cats.mtl.LocalInstances.baseLocalForKleisli", "link" : "cats\/mtl\/Local$.html#baseLocalForKleisli[F[_],E](implicitF:cats.Applicative[F]):cats.mtl.Local[[γ$4$]cats.data.Kleisli[F,E,γ$4$],E]", "kind" : "implicit def"}, {"label" : "localForKleisli", "tail" : "(arg0: Monad[F], F0: Local[F, E]): Local[[γ$0$]Kleisli[F, R, γ$0$], E]", "member" : "cats.mtl.LowPriorityLocalInstances.localForKleisli", "link" : "cats\/mtl\/Local$.html#localForKleisli[F[_],E,R](implicitevidence$1:cats.Monad[F],implicitF0:cats.mtl.Local[F,E]):cats.mtl.Local[[γ$0$]cats.data.Kleisli[F,R,γ$0$],E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Local$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Local$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Local$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Local$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Local$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Local$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Local$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Local$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Local$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Local$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Local$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Local$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Local$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Local$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Local$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Local$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Local$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Local$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Local$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Local.html", "kind" : "trait", "members_trait" : [{"label" : "scope", "tail" : "(fa: F[A])(e: E): F[A]", "member" : "cats.mtl.Local.scope", "link" : "cats\/mtl\/Local.html#scope[A](fa:F[A])(e:E):F[A]", "kind" : "def"}, {"label" : "reader", "tail" : "(f: (E) => A): F[A]", "member" : "cats.mtl.Ask.reader", "link" : "cats\/mtl\/Local.html#reader[A](f:E=>A):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Local.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Local.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Local.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Local.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Local.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Local.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Local.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Local.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Local.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Local.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Local.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Local.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Local.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Local.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Local.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Local.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Local.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Local.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Local.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "local", "tail" : "(fa: F[A])(f: (E) => E): F[A]", "member" : "cats.mtl.Local.local", "link" : "cats\/mtl\/Local.html#local[A](fa:F[A])(f:E=>E):F[A]", "kind" : "abstract def"}, {"label" : "ask", "tail" : "(): F[E2]", "member" : "cats.mtl.Ask.ask", "link" : "cats\/mtl\/Local.html#ask[E2>:E]:F[E2]", "kind" : "abstract def"}, {"label" : "applicative", "tail" : "(): Applicative[F]", "member" : "cats.mtl.Ask.applicative", "link" : "cats\/mtl\/Local.html#applicative:cats.Applicative[F]", "kind" : "abstract def"}], "shortDescription" : "Local[F, E] lets you alter the E value that is observed by an F[A] valueusing ask; the modification can only be observed from within that F[A] value."}, {"name" : "cats.mtl.MonadPartialOrder", "object" : "cats\/mtl\/MonadPartialOrder$.html", "members_object" : [{"label" : "apply", "tail" : "(mpo: MonadPartialOrder[F, G]): MonadPartialOrder[F, G]", "member" : "cats.mtl.MonadPartialOrder.apply", "link" : "cats\/mtl\/MonadPartialOrder$.html#apply[F[_],G[_]](implicitmpo:cats.mtl.MonadPartialOrder[F,G]):cats.mtl.MonadPartialOrder[F,G]", "kind" : "def"}, {"label" : "monadPartialOrderForIorT", "tail" : "(arg0: Semigroup[E], F: Monad[F]): MonadPartialOrder[F, [γ$12$]IorT[F, E, γ$12$]]", "member" : "cats.mtl.MonadPartialOrderInstances.monadPartialOrderForIorT", "link" : "cats\/mtl\/MonadPartialOrder$.html#monadPartialOrderForIorT[F[_],E](implicitevidence$3:cats.Semigroup[E],implicitF:cats.Monad[F]):cats.mtl.MonadPartialOrder[F,[γ$12$]cats.data.IorT[F,E,γ$12$]]", "kind" : "implicit def"}, {"label" : "monadPartialOrderForRWST", "tail" : "(arg0: Monoid[L], F: Monad[F]): MonadPartialOrder[F, [ε$10$]IndexedReaderWriterStateT[F, E, L, S, S, ε$10$]]", "member" : "cats.mtl.MonadPartialOrderInstances.monadPartialOrderForRWST", "link" : "cats\/mtl\/MonadPartialOrder$.html#monadPartialOrderForRWST[F[_],E,L,S](implicitevidence$2:cats.Monoid[L],implicitF:cats.Monad[F]):cats.mtl.MonadPartialOrder[F,[ε$10$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$10$]]", "kind" : "implicit def"}, {"label" : "monadPartialOrderForOptionT", "tail" : "(F: Monad[F]): MonadPartialOrder[F, [β$8$]OptionT[F, β$8$]]", "member" : "cats.mtl.MonadPartialOrderInstances.monadPartialOrderForOptionT", "link" : "cats\/mtl\/MonadPartialOrder$.html#monadPartialOrderForOptionT[F[_]](implicitF:cats.Monad[F]):cats.mtl.MonadPartialOrder[F,[β$8$]cats.data.OptionT[F,β$8$]]", "kind" : "implicit def"}, {"label" : "monadPartialOrderForWriterT", "tail" : "(arg0: Monoid[L], F: Monad[F]): MonadPartialOrder[F, [γ$6$]WriterT[F, L, γ$6$]]", "member" : "cats.mtl.MonadPartialOrderInstances.monadPartialOrderForWriterT", "link" : "cats\/mtl\/MonadPartialOrder$.html#monadPartialOrderForWriterT[F[_],L](implicitevidence$1:cats.Monoid[L],implicitF:cats.Monad[F]):cats.mtl.MonadPartialOrder[F,[γ$6$]cats.data.WriterT[F,L,γ$6$]]", "kind" : "implicit def"}, {"label" : "monadPartialOrderForEitherT", "tail" : "(F: Monad[F]): MonadPartialOrder[F, [γ$4$]EitherT[F, E, γ$4$]]", "member" : "cats.mtl.MonadPartialOrderInstances.monadPartialOrderForEitherT", "link" : "cats\/mtl\/MonadPartialOrder$.html#monadPartialOrderForEitherT[F[_],E](implicitF:cats.Monad[F]):cats.mtl.MonadPartialOrder[F,[γ$4$]cats.data.EitherT[F,E,γ$4$]]", "kind" : "implicit def"}, {"label" : "monadPartialOrderForKleisli", "tail" : "(F: Monad[F]): MonadPartialOrder[F, [γ$2$]Kleisli[F, R, γ$2$]]", "member" : "cats.mtl.MonadPartialOrderInstances.monadPartialOrderForKleisli", "link" : "cats\/mtl\/MonadPartialOrder$.html#monadPartialOrderForKleisli[F[_],R](implicitF:cats.Monad[F]):cats.mtl.MonadPartialOrder[F,[γ$2$]cats.data.Kleisli[F,R,γ$2$]]", "kind" : "implicit def"}, {"label" : "monadPartialOrderForStateT", "tail" : "(F: Monad[F]): MonadPartialOrder[F, [γ$0$]IndexedStateT[F, S, S, γ$0$]]", "member" : "cats.mtl.MonadPartialOrderInstances.monadPartialOrderForStateT", "link" : "cats\/mtl\/MonadPartialOrder$.html#monadPartialOrderForStateT[F[_],S](implicitF:cats.Monad[F]):cats.mtl.MonadPartialOrder[F,[γ$0$]cats.data.IndexedStateT[F,S,S,γ$0$]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/MonadPartialOrder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/MonadPartialOrder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/MonadPartialOrder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/MonadPartialOrder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/MonadPartialOrder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/MonadPartialOrder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/MonadPartialOrder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/MonadPartialOrder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/MonadPartialOrder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/MonadPartialOrder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/MonadPartialOrder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/MonadPartialOrder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/MonadPartialOrder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/MonadPartialOrder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/MonadPartialOrder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/MonadPartialOrder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/MonadPartialOrder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/MonadPartialOrder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/MonadPartialOrder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/MonadPartialOrder.html", "kind" : "trait", "members_trait" : [{"label" : "and", "tail" : "(h: FunctionK[F, H]): FunctionK[F, [γ$2$]Tuple2K[G, H, γ$2$]]", "member" : "cats.arrow.FunctionK.and", "link" : "cats\/mtl\/MonadPartialOrder.html#and[H[_<:<?>]](h:cats.arrow.FunctionK[F,H]):cats.arrow.FunctionK[F,[γ$2$]cats.data.Tuple2K[G,H,γ$2$]]", "kind" : "def"}, {"label" : "or", "tail" : "(h: FunctionK[H, G]): FunctionK[[γ$0$]EitherK[F, H, γ$0$], G]", "member" : "cats.arrow.FunctionK.or", "link" : "cats\/mtl\/MonadPartialOrder.html#or[H[_<:<?>]](h:cats.arrow.FunctionK[H,G]):cats.arrow.FunctionK[[γ$0$]cats.data.EitherK[F,H,γ$0$],G]", "kind" : "def"}, {"label" : "andThen", "tail" : "(f: FunctionK[G, H]): FunctionK[F, H]", "member" : "cats.arrow.FunctionK.andThen", "link" : "cats\/mtl\/MonadPartialOrder.html#andThen[H[_<:<?>]](f:cats.arrow.FunctionK[G,H]):cats.arrow.FunctionK[F,H]", "kind" : "def"}, {"label" : "compose", "tail" : "(f: FunctionK[E, F]): FunctionK[E, G]", "member" : "cats.arrow.FunctionK.compose", "link" : "cats\/mtl\/MonadPartialOrder.html#compose[E[_<:<?>]](f:cats.arrow.FunctionK[E,F]):cats.arrow.FunctionK[E,G]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/MonadPartialOrder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/MonadPartialOrder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/MonadPartialOrder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/MonadPartialOrder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/MonadPartialOrder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/MonadPartialOrder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/MonadPartialOrder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/MonadPartialOrder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/MonadPartialOrder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/MonadPartialOrder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/MonadPartialOrder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/MonadPartialOrder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/MonadPartialOrder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/MonadPartialOrder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/MonadPartialOrder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/MonadPartialOrder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/MonadPartialOrder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/MonadPartialOrder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/MonadPartialOrder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monadG", "tail" : "(): Monad[G]", "member" : "cats.mtl.MonadPartialOrder.monadG", "link" : "cats\/mtl\/MonadPartialOrder.html#monadG:cats.Monad[G]", "kind" : "abstract def"}, {"label" : "monadF", "tail" : "(): Monad[F]", "member" : "cats.mtl.MonadPartialOrder.monadF", "link" : "cats\/mtl\/MonadPartialOrder.html#monadF:cats.Monad[F]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(fa: F[A]): G[A]", "member" : "cats.arrow.FunctionK.apply", "link" : "cats\/mtl\/MonadPartialOrder.html#apply[A](fa:F[A]):G[A]", "kind" : "abstract def"}], "shortDescription" : "Encapsulates the notion of a monad, G, which contains all ofthe effects of some other monad, F."}, {"name" : "cats.mtl.Raise", "object" : "cats\/mtl\/Raise$.html", "members_object" : [{"label" : "raiseF", "tail" : "(): raiseFPartiallyApplied[F]", "member" : "cats.mtl.Raise.raiseF", "link" : "cats\/mtl\/Raise$.html#raiseF[F[_]]:cats.mtl.Raise.raiseFPartiallyApplied[F]", "kind" : "def"}, {"label" : "raise", "tail" : "(e: E)(raise: Raise[F, _ >: E]): F[A]", "member" : "cats.mtl.Raise.raise", "link" : "cats\/mtl\/Raise$.html#raise[F[_],E,A](e:E)(implicitraise:cats.mtl.Raise[F,_>:E]):F[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(raise: Raise[F, E]): Raise[F, E]", "member" : "cats.mtl.Raise.apply", "link" : "cats\/mtl\/Raise$.html#apply[F[_],E](implicitraise:cats.mtl.Raise[F,E]):cats.mtl.Raise[F,E]", "kind" : "def"}, {"label" : "raiseIorT", "tail" : "(E: Semigroup[E], F: Monad[F]): Raise[[γ$2$]IorT[F, E, γ$2$], E]", "member" : "cats.mtl.RaiseInstances.raiseIorT", "link" : "cats\/mtl\/Raise$.html#raiseIorT[F[_],E](implicitE:cats.Semigroup[E],implicitF:cats.Monad[F]):cats.mtl.Raise[[γ$2$]cats.data.IorT[F,E,γ$2$],E]", "kind" : "implicit final def"}, {"label" : "raiseIor", "tail" : "(E: Semigroup[E]): Raise[[β$1$]Ior[E, β$1$], E]", "member" : "cats.mtl.RaiseInstances.raiseIor", "link" : "cats\/mtl\/Raise$.html#raiseIor[E](implicitE:cats.Semigroup[E]):cats.mtl.Raise[[β$1$]cats.data.Ior[E,β$1$],E]", "kind" : "implicit final def"}, {"label" : "raiseValidated", "tail" : "(E: Semigroup[E]): Raise[[β$0$]Validated[E, β$0$], E]", "member" : "cats.mtl.RaiseInstances.raiseValidated", "link" : "cats\/mtl\/Raise$.html#raiseValidated[E](implicitE:cats.Semigroup[E]):cats.mtl.Raise[[β$0$]cats.data.Validated[E,β$0$],E]", "kind" : "implicit final def"}, {"label" : "raiseOption", "tail" : "(): Raise[Option, Unit]", "member" : "cats.mtl.RaiseInstances.raiseOption", "link" : "cats\/mtl\/Raise$.html#raiseOption[E]:cats.mtl.Raise[Option,Unit]", "kind" : "implicit final def"}, {"label" : "raiseOptionT", "tail" : "(M: Monad[M]): Raise[[A]OptionT[M, A], Unit]", "member" : "cats.mtl.RaiseInstances.raiseOptionT", "link" : "cats\/mtl\/Raise$.html#raiseOptionT[M[_]](implicitM:cats.Monad[M]):cats.mtl.Raise[[A]cats.data.OptionT[M,A],Unit]", "kind" : "implicit final def"}, {"label" : "raiseEither", "tail" : "(): Raise[[A]Either[E, A], E]", "member" : "cats.mtl.RaiseInstances.raiseEither", "link" : "cats\/mtl\/Raise$.html#raiseEither[E]:cats.mtl.Raise[[A]scala.util.Either[E,A],E]", "kind" : "implicit final def"}, {"label" : "raiseEitherT", "tail" : "(M: Monad[M]): Raise[[A]EitherT[M, E, A], E]", "member" : "cats.mtl.RaiseInstances.raiseEitherT", "link" : "cats\/mtl\/Raise$.html#raiseEitherT[M[_],E](implicitM:cats.Monad[M]):cats.mtl.Raise[[A]cats.data.EitherT[M,E,A],E]", "kind" : "implicit final def"}, {"label" : "raiseForMonadPartialOrder", "tail" : "(arg0: Functor[G], F0: Raise[F, E], lift0: MonadPartialOrder[F, G]): Raise[G, E]", "member" : "cats.mtl.LowPriorityRaiseInstances.raiseForMonadPartialOrder", "link" : "cats\/mtl\/Raise$.html#raiseForMonadPartialOrder[F[_],G[_],E](implicitevidence$1:cats.Functor[G],implicitF0:cats.mtl.Raise[F,E],implicitlift0:cats.mtl.MonadPartialOrder[F,G]):cats.mtl.Raise[G,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Raise$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Raise$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Raise$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Raise$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Raise$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Raise$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Raise$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Raise$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Raise$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Raise$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Raise$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Raise$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Raise$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Raise$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Raise$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Raise$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Raise$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Raise$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Raise$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Raise.html", "kind" : "trait", "members_trait" : [{"label" : "ensure", "tail" : "(fa: F[A])(error: => E2)(predicate: (A) => Boolean)(A: Monad[F]): F[A]", "member" : "cats.mtl.Raise.ensure", "link" : "cats\/mtl\/Raise.html#ensure[E2<:E,A](fa:F[A])(error:=>E2)(predicate:A=>Boolean)(implicitA:cats.Monad[F]):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(f: (Throwable) => E2)(A: Applicative[F]): F[A]", "member" : "cats.mtl.Raise.catchNonFatal", "link" : "cats\/mtl\/Raise.html#catchNonFatal[E2<:E,A](a:=>A)(f:Throwable=>E2)(implicitA:cats.Applicative[F]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Raise.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Raise.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Raise.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Raise.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Raise.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Raise.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Raise.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Raise.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Raise.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Raise.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Raise.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Raise.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Raise.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Raise.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Raise.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Raise.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Raise.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Raise.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Raise.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "raise", "tail" : "(e: E2): F[A]", "member" : "cats.mtl.Raise.raise", "link" : "cats\/mtl\/Raise.html#raise[E2<:E,A](e:E2):F[A]", "kind" : "abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "cats.mtl.Raise.functor", "link" : "cats\/mtl\/Raise.html#functor:cats.Functor[F]", "kind" : "abstract def"}], "shortDescription" : "Raise[F, E] expresses the ability to raise errors of type E in a functorial F[_] context."}, {"name" : "cats.mtl.Stateful", "object" : "cats\/mtl\/Stateful$.html", "members_object" : [{"label" : "apply", "tail" : "(stateful: Stateful[F, S]): Stateful[F, S]", "member" : "cats.mtl.Stateful.apply", "link" : "cats\/mtl\/Stateful$.html#apply[F[_],S](implicitstateful:cats.mtl.Stateful[F,S]):cats.mtl.Stateful[F,S]", "kind" : "def"}, {"label" : "inspect", "tail" : "(f: (S) => A)(state: Stateful[F, S]): F[A]", "member" : "cats.mtl.Stateful.inspect", "link" : "cats\/mtl\/Stateful$.html#inspect[F[_],S,A](f:S=>A)(implicitstate:cats.mtl.Stateful[F,S]):F[A]", "kind" : "def"}, {"label" : "modify", "tail" : "(f: (S) => S)(state: Stateful[F, S]): F[Unit]", "member" : "cats.mtl.Stateful.modify", "link" : "cats\/mtl\/Stateful$.html#modify[F[_],S](f:S=>S)(implicitstate:cats.mtl.Stateful[F,S]):F[Unit]", "kind" : "def"}, {"label" : "setF", "tail" : "(): setFPartiallyApplied[F]", "member" : "cats.mtl.Stateful.setF", "link" : "cats\/mtl\/Stateful$.html#setF[F[_]]:cats.mtl.Stateful.setFPartiallyApplied[F]", "kind" : "def"}, {"label" : "set", "tail" : "(newState: S)(ev: Stateful[F, S]): F[Unit]", "member" : "cats.mtl.Stateful.set", "link" : "cats\/mtl\/Stateful$.html#set[F[_],S](newState:S)(implicitev:cats.mtl.Stateful[F,S]):F[Unit]", "kind" : "def"}, {"label" : "get", "tail" : "(ev: Stateful[F, S]): F[S]", "member" : "cats.mtl.Stateful.get", "link" : "cats\/mtl\/Stateful$.html#get[F[_],S](implicitev:cats.mtl.Stateful[F,S]):F[S]", "kind" : "def"}, {"label" : "statefulForRWST", "tail" : "(arg0: Monad[F], arg1: Monoid[L]): Stateful[[ε$3$]IndexedReaderWriterStateT[F, E, L, S, S, ε$3$], S]", "member" : "cats.mtl.StatefulInstances.statefulForRWST", "link" : "cats\/mtl\/Stateful$.html#statefulForRWST[F[_],E,L,S](implicitevidence$2:cats.Monad[F],implicitevidence$3:cats.Monoid[L]):cats.mtl.Stateful[[ε$3$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$3$],S]", "kind" : "implicit def"}, {"label" : "statefulForStateT", "tail" : "(arg0: Monad[F]): Stateful[[γ$0$]IndexedStateT[F, S, S, γ$0$], S]", "member" : "cats.mtl.StatefulInstances.statefulForStateT", "link" : "cats\/mtl\/Stateful$.html#statefulForStateT[F[_],S](implicitevidence$1:cats.Monad[F]):cats.mtl.Stateful[[γ$0$]cats.data.IndexedStateT[F,S,S,γ$0$],S]", "kind" : "implicit def"}, {"label" : "statefulForPartialOrder", "tail" : "(liftF: MonadPartialOrder[F, G], ms: Stateful[F, S]): Stateful[G, S]", "member" : "cats.mtl.LowPriorityStatefulInstances.statefulForPartialOrder", "link" : "cats\/mtl\/Stateful$.html#statefulForPartialOrder[F[_],G[_],S](implicitliftF:cats.mtl.MonadPartialOrder[F,G],implicitms:cats.mtl.Stateful[F,S]):cats.mtl.Stateful[G,S]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Stateful$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Stateful$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Stateful$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Stateful$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Stateful$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Stateful$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Stateful$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Stateful$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Stateful$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Stateful$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Stateful$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Stateful$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Stateful$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Stateful$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Stateful$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Stateful$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Stateful$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Stateful$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Stateful$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Stateful.html", "kind" : "trait", "members_trait" : [{"label" : "modify", "tail" : "(f: (S) => S): F[Unit]", "member" : "cats.mtl.Stateful.modify", "link" : "cats\/mtl\/Stateful.html#modify(f:S=>S):F[Unit]", "kind" : "def"}, {"label" : "inspect", "tail" : "(f: (S) => A): F[A]", "member" : "cats.mtl.Stateful.inspect", "link" : "cats\/mtl\/Stateful.html#inspect[A](f:S=>A):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Stateful.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Stateful.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Stateful.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Stateful.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Stateful.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Stateful.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Stateful.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Stateful.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Stateful.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Stateful.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Stateful.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Stateful.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Stateful.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Stateful.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Stateful.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Stateful.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Stateful.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Stateful.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Stateful.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "set", "tail" : "(s: S): F[Unit]", "member" : "cats.mtl.Stateful.set", "link" : "cats\/mtl\/Stateful.html#set(s:S):F[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): F[S]", "member" : "cats.mtl.Stateful.get", "link" : "cats\/mtl\/Stateful.html#get:F[S]", "kind" : "abstract def"}, {"label" : "monad", "tail" : "(): Monad[F]", "member" : "cats.mtl.Stateful.monad", "link" : "cats\/mtl\/Stateful.html#monad:cats.Monad[F]", "kind" : "abstract def"}], "shortDescription" : "Stateful[F, S] is the capability to access and modify a state valuefrom inside the F[_] context, using set(s: S): F[Unit] and get: F[S]."}, {"name" : "cats.mtl.Tell", "object" : "cats\/mtl\/Tell$.html", "members_object" : [{"label" : "tellF", "tail" : "(): tellFPartiallyApplied[F]", "member" : "cats.mtl.Tell.tellF", "link" : "cats\/mtl\/Tell$.html#tellF[F[_]]:cats.mtl.Tell.tellFPartiallyApplied[F]", "kind" : "def"}, {"label" : "tell", "tail" : "(l: L)(tell: Tell[F, L]): F[Unit]", "member" : "cats.mtl.Tell.tell", "link" : "cats\/mtl\/Tell$.html#tell[F[_],L](l:L)(implicittell:cats.mtl.Tell[F,L]):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(tell: Tell[F, L]): Tell[F, L]", "member" : "cats.mtl.Tell.apply", "link" : "cats\/mtl\/Tell$.html#apply[F[_],L](implicittell:cats.mtl.Tell[F,L]):cats.mtl.Tell[F,L]", "kind" : "def"}, {"label" : "tellForWriterT", "tail" : "(arg0: Applicative[F], arg1: Monoid[L]): Tell[[γ$0$]WriterT[F, L, γ$0$], L]", "member" : "cats.mtl.TellInstances.tellForWriterT", "link" : "cats\/mtl\/Tell$.html#tellForWriterT[F[_],L](implicitevidence$1:cats.Applicative[F],implicitevidence$2:cats.Monoid[L]):cats.mtl.Tell[[γ$0$]cats.data.WriterT[F,L,γ$0$],L]", "kind" : "implicit def"}, {"label" : "tellForPartialOrder", "tail" : "(lift0: MonadPartialOrder[F, G], F0: Tell[F, L]): Tell[G, L]", "member" : "cats.mtl.LowPriorityTellInstances.tellForPartialOrder", "link" : "cats\/mtl\/Tell$.html#tellForPartialOrder[F[_],G[_],L](implicitlift0:cats.mtl.MonadPartialOrder[F,G],implicitF0:cats.mtl.Tell[F,L]):cats.mtl.Tell[G,L]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Tell$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Tell$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Tell$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Tell$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Tell$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Tell$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Tell$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Tell$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Tell$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Tell$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Tell$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Tell$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Tell$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Tell$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Tell$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Tell$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Tell$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Tell$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Tell$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/mtl\/Tell.html", "kind" : "trait", "members_trait" : [{"label" : "tuple", "tail" : "(ta: (L, A)): F[A]", "member" : "cats.mtl.Tell.tuple", "link" : "cats\/mtl\/Tell.html#tuple[A](ta:(L,A)):F[A]", "kind" : "def"}, {"label" : "writer", "tail" : "(a: A, l: L): F[A]", "member" : "cats.mtl.Tell.writer", "link" : "cats\/mtl\/Tell.html#writer[A](a:A,l:L):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/Tell.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/Tell.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/Tell.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/Tell.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/Tell.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/Tell.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/Tell.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Tell.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Tell.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/Tell.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/Tell.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/Tell.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/Tell.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/Tell.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/Tell.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/Tell.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/Tell.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/Tell.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/Tell.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "tell", "tail" : "(l: L): F[Unit]", "member" : "cats.mtl.Tell.tell", "link" : "cats\/mtl\/Tell.html#tell(l:L):F[Unit]", "kind" : "abstract def"}, {"label" : "functor", "tail" : "(): Functor[F]", "member" : "cats.mtl.Tell.functor", "link" : "cats\/mtl\/Tell.html#functor:cats.Functor[F]", "kind" : "abstract def"}], "shortDescription" : "Tell[F, L] is the ability to \"log\" values L inside a context F[_], as an effect."}], "cats.mtl.syntax" : [{"name" : "cats.mtl.syntax.all", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/all$.html", "members_object" : [{"label" : "toChronicleIorOps", "tail" : "(ior: Ior[E, A]): ChronicleIorOps[A, E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIorOps", "link" : "cats\/mtl\/syntax\/all$.html#toChronicleIorOps[A,E](ior:cats.data.Ior[E,A]):cats.mtl.syntax.ChronicleIorOps[A,E]", "kind" : "implicit def"}, {"label" : "toChronicleIdOps", "tail" : "(e: E): ChronicleIdOps[E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIdOps", "link" : "cats\/mtl\/syntax\/all$.html#toChronicleIdOps[E](e:E):cats.mtl.syntax.ChronicleIdOps[E]", "kind" : "implicit def"}, {"label" : "toChronicleOps", "tail" : "(fa: F[A]): ChronicleOps[F, A]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleOps", "link" : "cats\/mtl\/syntax\/all$.html#toChronicleOps[F[_],A](fa:F[A]):cats.mtl.syntax.ChronicleOps[F,A]", "kind" : "implicit def"}, {"label" : "toHandleOps", "tail" : "(fa: F[A]): HandleOps[F, A]", "member" : "cats.mtl.syntax.HandleSyntax.toHandleOps", "link" : "cats\/mtl\/syntax\/all$.html#toHandleOps[F[_],A](fa:F[A]):cats.mtl.syntax.HandleOps[F,A]", "kind" : "implicit def"}, {"label" : "toTupleOps", "tail" : "(t: (L, A)): TupleOps[L, A]", "member" : "cats.mtl.syntax.TellSyntax.toTupleOps", "link" : "cats\/mtl\/syntax\/all$.html#toTupleOps[L,A](t:(L,A)):cats.mtl.syntax.TupleOps[L,A]", "kind" : "implicit def"}, {"label" : "toTellOps", "tail" : "(e: L): TellOps[L]", "member" : "cats.mtl.syntax.TellSyntax.toTellOps", "link" : "cats\/mtl\/syntax\/all$.html#toTellOps[L](e:L):cats.mtl.syntax.TellOps[L]", "kind" : "implicit def"}, {"label" : "toModifyOps", "tail" : "(f: (S) => S): ModifyOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toModifyOps", "link" : "cats\/mtl\/syntax\/all$.html#toModifyOps[S](f:S=>S):cats.mtl.syntax.ModifyOps[S]", "kind" : "implicit def"}, {"label" : "toSetOps", "tail" : "(e: S): SetOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toSetOps", "link" : "cats\/mtl\/syntax\/all$.html#toSetOps[S](e:S):cats.mtl.syntax.SetOps[S]", "kind" : "implicit def"}, {"label" : "toRaiseOps", "tail" : "(e: E): RaiseOps[E]", "member" : "cats.mtl.syntax.RaiseSyntax.toRaiseOps", "link" : "cats\/mtl\/syntax\/all$.html#toRaiseOps[E](e:E):cats.mtl.syntax.RaiseOps[E]", "kind" : "implicit def"}, {"label" : "toLocalOps", "tail" : "(fa: F[A]): LocalOps[F, A]", "member" : "cats.mtl.syntax.LocalSyntax.toLocalOps", "link" : "cats\/mtl\/syntax\/all$.html#toLocalOps[F[_],A](fa:F[A]):cats.mtl.syntax.LocalOps[F,A]", "kind" : "implicit def"}, {"label" : "toListenOps", "tail" : "(fa: F[A]): ListenOps[F, A]", "member" : "cats.mtl.syntax.ListenSyntax.toListenOps", "link" : "cats\/mtl\/syntax\/all$.html#toListenOps[F[_],A](fa:F[A]):cats.mtl.syntax.ListenOps[F,A]", "kind" : "implicit def"}, {"label" : "toReaderOps", "tail" : "(fun: (E) => A): ReaderOps[E, A]", "member" : "cats.mtl.syntax.AskSyntax.toReaderOps", "link" : "cats\/mtl\/syntax\/all$.html#toReaderOps[E,A](fun:E=>A):cats.mtl.syntax.ReaderOps[E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/all$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/all$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/all$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/all$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/all$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.AllSyntax", "trait" : "cats\/mtl\/syntax\/AllSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toChronicleIorOps", "tail" : "(ior: Ior[E, A]): ChronicleIorOps[A, E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIorOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toChronicleIorOps[A,E](ior:cats.data.Ior[E,A]):cats.mtl.syntax.ChronicleIorOps[A,E]", "kind" : "implicit def"}, {"label" : "toChronicleIdOps", "tail" : "(e: E): ChronicleIdOps[E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIdOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toChronicleIdOps[E](e:E):cats.mtl.syntax.ChronicleIdOps[E]", "kind" : "implicit def"}, {"label" : "toChronicleOps", "tail" : "(fa: F[A]): ChronicleOps[F, A]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toChronicleOps[F[_],A](fa:F[A]):cats.mtl.syntax.ChronicleOps[F,A]", "kind" : "implicit def"}, {"label" : "toHandleOps", "tail" : "(fa: F[A]): HandleOps[F, A]", "member" : "cats.mtl.syntax.HandleSyntax.toHandleOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toHandleOps[F[_],A](fa:F[A]):cats.mtl.syntax.HandleOps[F,A]", "kind" : "implicit def"}, {"label" : "toTupleOps", "tail" : "(t: (L, A)): TupleOps[L, A]", "member" : "cats.mtl.syntax.TellSyntax.toTupleOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toTupleOps[L,A](t:(L,A)):cats.mtl.syntax.TupleOps[L,A]", "kind" : "implicit def"}, {"label" : "toTellOps", "tail" : "(e: L): TellOps[L]", "member" : "cats.mtl.syntax.TellSyntax.toTellOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toTellOps[L](e:L):cats.mtl.syntax.TellOps[L]", "kind" : "implicit def"}, {"label" : "toModifyOps", "tail" : "(f: (S) => S): ModifyOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toModifyOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toModifyOps[S](f:S=>S):cats.mtl.syntax.ModifyOps[S]", "kind" : "implicit def"}, {"label" : "toSetOps", "tail" : "(e: S): SetOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toSetOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toSetOps[S](e:S):cats.mtl.syntax.SetOps[S]", "kind" : "implicit def"}, {"label" : "toRaiseOps", "tail" : "(e: E): RaiseOps[E]", "member" : "cats.mtl.syntax.RaiseSyntax.toRaiseOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toRaiseOps[E](e:E):cats.mtl.syntax.RaiseOps[E]", "kind" : "implicit def"}, {"label" : "toLocalOps", "tail" : "(fa: F[A]): LocalOps[F, A]", "member" : "cats.mtl.syntax.LocalSyntax.toLocalOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toLocalOps[F[_],A](fa:F[A]):cats.mtl.syntax.LocalOps[F,A]", "kind" : "implicit def"}, {"label" : "toListenOps", "tail" : "(fa: F[A]): ListenOps[F, A]", "member" : "cats.mtl.syntax.ListenSyntax.toListenOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toListenOps[F[_],A](fa:F[A]):cats.mtl.syntax.ListenOps[F,A]", "kind" : "implicit def"}, {"label" : "toReaderOps", "tail" : "(fun: (E) => A): ReaderOps[E, A]", "member" : "cats.mtl.syntax.AskSyntax.toReaderOps", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toReaderOps[E,A](fun:E=>A):cats.mtl.syntax.ReaderOps[E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/AllSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/AllSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/AllSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/AllSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/AllSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/AllSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/AllSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/AllSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/AllSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/AllSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/AllSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/AllSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/AllSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/AllSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/AllSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/AllSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/AllSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/AllSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/AllSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.ask", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/ask$.html", "members_object" : [{"label" : "toReaderOps", "tail" : "(fun: (E) => A): ReaderOps[E, A]", "member" : "cats.mtl.syntax.AskSyntax.toReaderOps", "link" : "cats\/mtl\/syntax\/ask$.html#toReaderOps[E,A](fun:E=>A):cats.mtl.syntax.ReaderOps[E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/ask$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/ask$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/ask$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/ask$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/ask$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/ask$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/ask$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ask$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ask$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ask$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/ask$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/ask$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/ask$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/ask$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/ask$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/ask$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/ask$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ask$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ask$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.AskSyntax", "trait" : "cats\/mtl\/syntax\/AskSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toReaderOps", "tail" : "(fun: (E) => A): ReaderOps[E, A]", "member" : "cats.mtl.syntax.AskSyntax.toReaderOps", "link" : "cats\/mtl\/syntax\/AskSyntax.html#toReaderOps[E,A](fun:E=>A):cats.mtl.syntax.ReaderOps[E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/AskSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/AskSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/AskSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/AskSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/AskSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/AskSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/AskSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/AskSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/AskSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/AskSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/AskSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/AskSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/AskSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/AskSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/AskSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/AskSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/AskSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/AskSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/AskSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.chronicle", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/chronicle$.html", "members_object" : [{"label" : "toChronicleIorOps", "tail" : "(ior: Ior[E, A]): ChronicleIorOps[A, E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIorOps", "link" : "cats\/mtl\/syntax\/chronicle$.html#toChronicleIorOps[A,E](ior:cats.data.Ior[E,A]):cats.mtl.syntax.ChronicleIorOps[A,E]", "kind" : "implicit def"}, {"label" : "toChronicleIdOps", "tail" : "(e: E): ChronicleIdOps[E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIdOps", "link" : "cats\/mtl\/syntax\/chronicle$.html#toChronicleIdOps[E](e:E):cats.mtl.syntax.ChronicleIdOps[E]", "kind" : "implicit def"}, {"label" : "toChronicleOps", "tail" : "(fa: F[A]): ChronicleOps[F, A]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleOps", "link" : "cats\/mtl\/syntax\/chronicle$.html#toChronicleOps[F[_],A](fa:F[A]):cats.mtl.syntax.ChronicleOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/chronicle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/chronicle$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/chronicle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/chronicle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/chronicle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/chronicle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/chronicle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/chronicle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/chronicle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/chronicle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/chronicle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/chronicle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/chronicle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/chronicle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/chronicle$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/chronicle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/chronicle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/chronicle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/chronicle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.ChronicleIdOps", "shortDescription" : "", "members_class" : [{"label" : "confess", "tail" : "(chronicle: Chronicle[F, E]): F[A]", "member" : "cats.mtl.syntax.ChronicleIdOps.confess", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#confess[F[_],A](implicitchronicle:cats.mtl.Chronicle[F,E]):F[A]", "kind" : "def"}, {"label" : "disclose", "tail" : "(chronicle: Chronicle[F, E], monoid: Monoid[A]): F[A]", "member" : "cats.mtl.syntax.ChronicleIdOps.disclose", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#disclose[F[_],A](implicitchronicle:cats.mtl.Chronicle[F,E],implicitmonoid:cats.Monoid[A]):F[A]", "kind" : "def"}, {"label" : "dictate", "tail" : "(chronicle: Chronicle[F, E]): F[Unit]", "member" : "cats.mtl.syntax.ChronicleIdOps.dictate", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#dictate[F[_]](implicitchronicle:cats.mtl.Chronicle[F,E]):F[Unit]", "kind" : "def"}, {"member" : "cats.mtl.syntax.ChronicleIdOps#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": E", "member" : "cats.mtl.syntax.ChronicleIdOps.e", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#e:E", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/ChronicleIdOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/ChronicleIdOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.ChronicleIorOps", "shortDescription" : "", "members_class" : [{"label" : "chronicle", "tail" : "(chronicle: Chronicle[F, E]): F[A]", "member" : "cats.mtl.syntax.ChronicleIorOps.chronicle", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#chronicle[F[_]](implicitchronicle:cats.mtl.Chronicle[F,E]):F[A]", "kind" : "def"}, {"member" : "cats.mtl.syntax.ChronicleIorOps#<init>", "error" : "unsupported entity"}, {"label" : "ior", "tail" : ": Ior[E, A]", "member" : "cats.mtl.syntax.ChronicleIorOps.ior", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#ior:cats.data.Ior[E,A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/ChronicleIorOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/ChronicleIorOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.ChronicleOps", "shortDescription" : "", "members_class" : [{"label" : "retcon", "tail" : "(cc: (E) => E)(chronicle: Chronicle[F, E]): F[A]", "member" : "cats.mtl.syntax.ChronicleOps.retcon", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#retcon[E](cc:E=>E)(implicitchronicle:cats.mtl.Chronicle[F,E]):F[A]", "kind" : "def"}, {"label" : "condemn", "tail" : "(chronicle: Chronicle[F, E]): F[A]", "member" : "cats.mtl.syntax.ChronicleOps.condemn", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#condemn[E](implicitchronicle:cats.mtl.Chronicle[F,E]):F[A]", "kind" : "def"}, {"label" : "absolve", "tail" : "(a: => A)(chronicle: Chronicle[F, E]): F[A]", "member" : "cats.mtl.syntax.ChronicleOps.absolve", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#absolve[E](a:=>A)(implicitchronicle:cats.mtl.Chronicle[F,E]):F[A]", "kind" : "def"}, {"label" : "memento", "tail" : "(chronicle: Chronicle[F, E]): F[Either[E, A]]", "member" : "cats.mtl.syntax.ChronicleOps.memento", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#memento[E](implicitchronicle:cats.mtl.Chronicle[F,E]):F[Either[E,A]]", "kind" : "def"}, {"label" : "materialize", "tail" : "(chronicle: Chronicle[F, E]): F[Ior[E, A]]", "member" : "cats.mtl.syntax.ChronicleOps.materialize", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#materialize[E](implicitchronicle:cats.mtl.Chronicle[F,E]):F[cats.data.Ior[E,A]]", "kind" : "def"}, {"member" : "cats.mtl.syntax.ChronicleOps#<init>", "error" : "unsupported entity"}, {"label" : "fa", "tail" : ": F[A]", "member" : "cats.mtl.syntax.ChronicleOps.fa", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#fa:F[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/ChronicleOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/ChronicleOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/ChronicleOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.ChronicleSyntax", "trait" : "cats\/mtl\/syntax\/ChronicleSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toChronicleIorOps", "tail" : "(ior: Ior[E, A]): ChronicleIorOps[A, E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIorOps", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#toChronicleIorOps[A,E](ior:cats.data.Ior[E,A]):cats.mtl.syntax.ChronicleIorOps[A,E]", "kind" : "implicit def"}, {"label" : "toChronicleIdOps", "tail" : "(e: E): ChronicleIdOps[E]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleIdOps", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#toChronicleIdOps[E](e:E):cats.mtl.syntax.ChronicleIdOps[E]", "kind" : "implicit def"}, {"label" : "toChronicleOps", "tail" : "(fa: F[A]): ChronicleOps[F, A]", "member" : "cats.mtl.syntax.ChronicleSyntax.toChronicleOps", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#toChronicleOps[F[_],A](fa:F[A]):cats.mtl.syntax.ChronicleOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ChronicleSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.handle", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/handle$.html", "members_object" : [{"label" : "toHandleOps", "tail" : "(fa: F[A]): HandleOps[F, A]", "member" : "cats.mtl.syntax.HandleSyntax.toHandleOps", "link" : "cats\/mtl\/syntax\/handle$.html#toHandleOps[F[_],A](fa:F[A]):cats.mtl.syntax.HandleOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/handle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/handle$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/handle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/handle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/handle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/handle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/handle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/handle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/handle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/handle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/handle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/handle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/handle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/handle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/handle$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/handle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/handle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/handle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/handle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.HandleOps", "shortDescription" : "", "members_class" : [{"label" : "handleWith", "tail" : "(f: (E) => F[A])(handle: Handle[F, E]): F[A]", "member" : "cats.mtl.syntax.HandleOps.handleWith", "link" : "cats\/mtl\/syntax\/HandleOps.html#handleWith[E](f:E=>F[A])(implicithandle:cats.mtl.Handle[F,E]):F[A]", "kind" : "def"}, {"label" : "handle", "tail" : "(f: (E) => A)(handle: Handle[F, E]): F[A]", "member" : "cats.mtl.syntax.HandleOps.handle", "link" : "cats\/mtl\/syntax\/HandleOps.html#handle[E](f:E=>A)(implicithandle:cats.mtl.Handle[F,E]):F[A]", "kind" : "def"}, {"label" : "attemptHandleT", "tail" : "(handle: Handle[F, E]): EitherT[F, E, A]", "member" : "cats.mtl.syntax.HandleOps.attemptHandleT", "link" : "cats\/mtl\/syntax\/HandleOps.html#attemptHandleT[E](implicithandle:cats.mtl.Handle[F,E]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attemptHandle", "tail" : "(handle: Handle[F, E]): F[Either[E, A]]", "member" : "cats.mtl.syntax.HandleOps.attemptHandle", "link" : "cats\/mtl\/syntax\/HandleOps.html#attemptHandle[E](implicithandle:cats.mtl.Handle[F,E]):F[Either[E,A]]", "kind" : "def"}, {"member" : "cats.mtl.syntax.HandleOps#<init>", "error" : "unsupported entity"}, {"label" : "fa", "tail" : ": F[A]", "member" : "cats.mtl.syntax.HandleOps.fa", "link" : "cats\/mtl\/syntax\/HandleOps.html#fa:F[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/HandleOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/HandleOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/HandleOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/HandleOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/HandleOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/HandleOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/HandleOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/HandleOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.HandleSyntax", "trait" : "cats\/mtl\/syntax\/HandleSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toHandleOps", "tail" : "(fa: F[A]): HandleOps[F, A]", "member" : "cats.mtl.syntax.HandleSyntax.toHandleOps", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#toHandleOps[F[_],A](fa:F[A]):cats.mtl.syntax.HandleOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/HandleSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/HandleSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.listen", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/listen$.html", "members_object" : [{"label" : "toListenOps", "tail" : "(fa: F[A]): ListenOps[F, A]", "member" : "cats.mtl.syntax.ListenSyntax.toListenOps", "link" : "cats\/mtl\/syntax\/listen$.html#toListenOps[F[_],A](fa:F[A]):cats.mtl.syntax.ListenOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/listen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/listen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/listen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/listen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/listen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/listen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/listen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/listen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/listen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/listen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/listen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/listen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/listen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/listen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/listen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/listen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/listen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/listen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/listen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.ListenOps", "shortDescription" : "", "members_class" : [{"label" : "listens", "tail" : "(f: (L) => B)(listen: Listen[F, L]): F[(A, B)]", "member" : "cats.mtl.syntax.ListenOps.listens", "link" : "cats\/mtl\/syntax\/ListenOps.html#listens[L,B](f:L=>B)(implicitlisten:cats.mtl.Listen[F,L]):F[(A,B)]", "kind" : "def"}, {"label" : "listen", "tail" : "(listen: Listen[F, L]): F[(A, L)]", "member" : "cats.mtl.syntax.ListenOps.listen", "link" : "cats\/mtl\/syntax\/ListenOps.html#listen[L](implicitlisten:cats.mtl.Listen[F,L]):F[(A,L)]", "kind" : "def"}, {"member" : "cats.mtl.syntax.ListenOps#<init>", "error" : "unsupported entity"}, {"label" : "fa", "tail" : ": F[A]", "member" : "cats.mtl.syntax.ListenOps.fa", "link" : "cats\/mtl\/syntax\/ListenOps.html#fa:F[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/ListenOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/ListenOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ListenOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ListenOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/ListenOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/ListenOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/ListenOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/ListenOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.ListenSyntax", "trait" : "cats\/mtl\/syntax\/ListenSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toListenOps", "tail" : "(fa: F[A]): ListenOps[F, A]", "member" : "cats.mtl.syntax.ListenSyntax.toListenOps", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#toListenOps[F[_],A](fa:F[A]):cats.mtl.syntax.ListenOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/ListenSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ListenSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.local", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/local$.html", "members_object" : [{"label" : "toLocalOps", "tail" : "(fa: F[A]): LocalOps[F, A]", "member" : "cats.mtl.syntax.LocalSyntax.toLocalOps", "link" : "cats\/mtl\/syntax\/local$.html#toLocalOps[F[_],A](fa:F[A]):cats.mtl.syntax.LocalOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/local$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/local$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/local$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/local$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/local$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/local$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/local$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/local$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/local$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/local$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/local$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/local$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/local$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/local$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/local$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/local$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/local$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/local$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/local$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.LocalOps", "shortDescription" : "", "members_class" : [{"label" : "scope", "tail" : "(e: E)(local: Local[F, E]): F[A]", "member" : "cats.mtl.syntax.LocalOps.scope", "link" : "cats\/mtl\/syntax\/LocalOps.html#scope[E](e:E)(implicitlocal:cats.mtl.Local[F,E]):F[A]", "kind" : "def"}, {"label" : "local", "tail" : "(f: (E) => E)(local: Local[F, E]): F[A]", "member" : "cats.mtl.syntax.LocalOps.local", "link" : "cats\/mtl\/syntax\/LocalOps.html#local[E](f:E=>E)(implicitlocal:cats.mtl.Local[F,E]):F[A]", "kind" : "def"}, {"member" : "cats.mtl.syntax.LocalOps#<init>", "error" : "unsupported entity"}, {"label" : "fa", "tail" : ": F[A]", "member" : "cats.mtl.syntax.LocalOps.fa", "link" : "cats\/mtl\/syntax\/LocalOps.html#fa:F[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/LocalOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/LocalOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/LocalOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/LocalOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/LocalOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/LocalOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/LocalOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/LocalOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.LocalSyntax", "trait" : "cats\/mtl\/syntax\/LocalSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toLocalOps", "tail" : "(fa: F[A]): LocalOps[F, A]", "member" : "cats.mtl.syntax.LocalSyntax.toLocalOps", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#toLocalOps[F[_],A](fa:F[A]):cats.mtl.syntax.LocalOps[F,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/LocalSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/LocalSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.ModifyOps", "shortDescription" : "", "members_class" : [{"label" : "modify", "tail" : "(stateful: Stateful[F, S]): F[Unit]", "member" : "cats.mtl.syntax.ModifyOps.modify", "link" : "cats\/mtl\/syntax\/ModifyOps.html#modify[F[_]](implicitstateful:cats.mtl.Stateful[F,S]):F[Unit]", "kind" : "def"}, {"member" : "cats.mtl.syntax.ModifyOps#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": (S) => S", "member" : "cats.mtl.syntax.ModifyOps.f", "link" : "cats\/mtl\/syntax\/ModifyOps.html#f:S=>S", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/ModifyOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/ModifyOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ModifyOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ModifyOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/ModifyOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/ModifyOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/ModifyOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/ModifyOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.raise", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/raise$.html", "members_object" : [{"label" : "toRaiseOps", "tail" : "(e: E): RaiseOps[E]", "member" : "cats.mtl.syntax.RaiseSyntax.toRaiseOps", "link" : "cats\/mtl\/syntax\/raise$.html#toRaiseOps[E](e:E):cats.mtl.syntax.RaiseOps[E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/raise$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/raise$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/raise$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/raise$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/raise$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/raise$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/raise$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/raise$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/raise$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/raise$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/raise$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/raise$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/raise$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/raise$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/raise$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/raise$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/raise$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/raise$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/raise$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.RaiseOps", "shortDescription" : "", "members_class" : [{"label" : "raise", "tail" : "(raise: Raise[F, E]): F[A]", "member" : "cats.mtl.syntax.RaiseOps.raise", "link" : "cats\/mtl\/syntax\/RaiseOps.html#raise[F[_],A](implicitraise:cats.mtl.Raise[F,E]):F[A]", "kind" : "def"}, {"member" : "cats.mtl.syntax.RaiseOps#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": E", "member" : "cats.mtl.syntax.RaiseOps.e", "link" : "cats\/mtl\/syntax\/RaiseOps.html#e:E", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/RaiseOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/RaiseOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/RaiseOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/RaiseOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/RaiseOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/RaiseOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/RaiseOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/RaiseOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.RaiseSyntax", "trait" : "cats\/mtl\/syntax\/RaiseSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toRaiseOps", "tail" : "(e: E): RaiseOps[E]", "member" : "cats.mtl.syntax.RaiseSyntax.toRaiseOps", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#toRaiseOps[E](e:E):cats.mtl.syntax.RaiseOps[E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/RaiseSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.ReaderOps", "shortDescription" : "", "members_class" : [{"label" : "reader", "tail" : "(ask: Ask[F, E]): F[A]", "member" : "cats.mtl.syntax.ReaderOps.reader", "link" : "cats\/mtl\/syntax\/ReaderOps.html#reader[F[_]](implicitask:cats.mtl.Ask[F,E]):F[A]", "kind" : "def"}, {"member" : "cats.mtl.syntax.ReaderOps#<init>", "error" : "unsupported entity"}, {"label" : "fun", "tail" : ": (E) => A", "member" : "cats.mtl.syntax.ReaderOps.fun", "link" : "cats\/mtl\/syntax\/ReaderOps.html#fun:E=>A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/ReaderOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/ReaderOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/ReaderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/ReaderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/ReaderOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/ReaderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/ReaderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/ReaderOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.SetOps", "shortDescription" : "", "members_class" : [{"label" : "set", "tail" : "(stateful: Stateful[F, S]): F[Unit]", "member" : "cats.mtl.syntax.SetOps.set", "link" : "cats\/mtl\/syntax\/SetOps.html#set[F[_]](implicitstateful:cats.mtl.Stateful[F,S]):F[Unit]", "kind" : "def"}, {"member" : "cats.mtl.syntax.SetOps#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": S", "member" : "cats.mtl.syntax.SetOps.s", "link" : "cats\/mtl\/syntax\/SetOps.html#s:S", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/SetOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/SetOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/SetOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/SetOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/SetOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/SetOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/SetOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/SetOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.state", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/state$.html", "members_object" : [{"label" : "toModifyOps", "tail" : "(f: (S) => S): ModifyOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toModifyOps", "link" : "cats\/mtl\/syntax\/state$.html#toModifyOps[S](f:S=>S):cats.mtl.syntax.ModifyOps[S]", "kind" : "implicit def"}, {"label" : "toSetOps", "tail" : "(e: S): SetOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toSetOps", "link" : "cats\/mtl\/syntax\/state$.html#toSetOps[S](e:S):cats.mtl.syntax.SetOps[S]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/state$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/state$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/state$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/state$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/state$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/state$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/state$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/state$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/state$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/state$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/state$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/state$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/state$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/state$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/state$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/state$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/state$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/state$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/state$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.StateSyntax", "trait" : "cats\/mtl\/syntax\/StateSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toModifyOps", "tail" : "(f: (S) => S): ModifyOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toModifyOps", "link" : "cats\/mtl\/syntax\/StateSyntax.html#toModifyOps[S](f:S=>S):cats.mtl.syntax.ModifyOps[S]", "kind" : "implicit def"}, {"label" : "toSetOps", "tail" : "(e: S): SetOps[S]", "member" : "cats.mtl.syntax.StateSyntax.toSetOps", "link" : "cats\/mtl\/syntax\/StateSyntax.html#toSetOps[S](e:S):cats.mtl.syntax.SetOps[S]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/StateSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/StateSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/StateSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/StateSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/StateSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/StateSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/StateSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/StateSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/StateSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/StateSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/StateSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/StateSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/StateSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/StateSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/StateSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/StateSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/StateSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/StateSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/StateSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.tell", "shortDescription" : "", "object" : "cats\/mtl\/syntax\/tell$.html", "members_object" : [{"label" : "toTupleOps", "tail" : "(t: (L, A)): TupleOps[L, A]", "member" : "cats.mtl.syntax.TellSyntax.toTupleOps", "link" : "cats\/mtl\/syntax\/tell$.html#toTupleOps[L,A](t:(L,A)):cats.mtl.syntax.TupleOps[L,A]", "kind" : "implicit def"}, {"label" : "toTellOps", "tail" : "(e: L): TellOps[L]", "member" : "cats.mtl.syntax.TellSyntax.toTellOps", "link" : "cats\/mtl\/syntax\/tell$.html#toTellOps[L](e:L):cats.mtl.syntax.TellOps[L]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/tell$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/tell$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/tell$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/tell$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/tell$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/tell$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/tell$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/tell$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/tell$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/tell$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/tell$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/tell$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/tell$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/tell$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/tell$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/tell$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/tell$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/tell$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/tell$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.mtl.syntax.TellOps", "shortDescription" : "", "members_class" : [{"label" : "tell", "tail" : "(tell: Tell[F, L]): F[Unit]", "member" : "cats.mtl.syntax.TellOps.tell", "link" : "cats\/mtl\/syntax\/TellOps.html#tell[F[_]](implicittell:cats.mtl.Tell[F,L]):F[Unit]", "kind" : "def"}, {"member" : "cats.mtl.syntax.TellOps#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": L", "member" : "cats.mtl.syntax.TellOps.e", "link" : "cats\/mtl\/syntax\/TellOps.html#e:L", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/TellOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/TellOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/TellOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/TellOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/TellOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/TellOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/TellOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/TellOps.html", "kind" : "class"}, {"name" : "cats.mtl.syntax.TellSyntax", "trait" : "cats\/mtl\/syntax\/TellSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toTupleOps", "tail" : "(t: (L, A)): TupleOps[L, A]", "member" : "cats.mtl.syntax.TellSyntax.toTupleOps", "link" : "cats\/mtl\/syntax\/TellSyntax.html#toTupleOps[L,A](t:(L,A)):cats.mtl.syntax.TupleOps[L,A]", "kind" : "implicit def"}, {"label" : "toTellOps", "tail" : "(e: L): TellOps[L]", "member" : "cats.mtl.syntax.TellSyntax.toTellOps", "link" : "cats\/mtl\/syntax\/TellSyntax.html#toTellOps[L](e:L):cats.mtl.syntax.TellOps[L]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/mtl\/syntax\/TellSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/mtl\/syntax\/TellSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/mtl\/syntax\/TellSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/mtl\/syntax\/TellSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/mtl\/syntax\/TellSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/mtl\/syntax\/TellSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/mtl\/syntax\/TellSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/TellSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/TellSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/mtl\/syntax\/TellSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/mtl\/syntax\/TellSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/mtl\/syntax\/TellSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/mtl\/syntax\/TellSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/mtl\/syntax\/TellSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/mtl\/syntax\/TellSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/mtl\/syntax\/TellSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/mtl\/syntax\/TellSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/TellSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/TellSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.mtl.syntax.TupleOps", "shortDescription" : "", "members_class" : [{"label" : "tuple", "tail" : "(tell: Tell[F, L]): F[A]", "member" : "cats.mtl.syntax.TupleOps.tuple", "link" : "cats\/mtl\/syntax\/TupleOps.html#tuple[F[_]](implicittell:cats.mtl.Tell[F,L]):F[A]", "kind" : "def"}, {"member" : "cats.mtl.syntax.TupleOps#<init>", "error" : "unsupported entity"}, {"label" : "t", "tail" : ": (L, A)", "member" : "cats.mtl.syntax.TupleOps.t", "link" : "cats\/mtl\/syntax\/TupleOps.html#t:(L,A)", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/mtl\/syntax\/TupleOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/mtl\/syntax\/TupleOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/mtl\/syntax\/TupleOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/mtl\/syntax\/TupleOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/mtl\/syntax\/TupleOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/mtl\/syntax\/TupleOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/mtl\/syntax\/TupleOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/mtl\/syntax\/TupleOps.html", "kind" : "class"}], "cats" : []};